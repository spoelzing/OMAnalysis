% Connexin Calculation Program
% Written By Steven Poelzing
% To start, type imagecalc('I')

function [varargout]=imagecalc(Action,varargin);
global Fig
global Log


if ~exist('Action')
   Action='I';
end

switch Action
   
case 'I'
   Fig.Line=[];
   Fig.Line1=[];
   Fig.SaveValue=0;
   Fig.Mousedown=0;
   Fig.Patch=[];
 	   FG_Size(3:4)=[700 500];
    	FG_Size(1:2)=[100 100];
      Fig.Figure=figure(5);
    set(Fig.Figure,...
       'Color',[0.8 0.8 0.8], ...
       'DeleteFcn','imagecalc(''Exit'');',...
         'Menu','none',...
         'Name','Cx Quantification',...
         'NumberTitle','off',...
         'Position',FG_Size, ...
         'Tag','Log');

   AxisSize=[60 30 FG_Size(3)-200 FG_Size(4)-100];
   Fig.Axis = axes('Parent',Fig.Figure, ...
     'FontName','Arial',...
     'FontUnits','points',...
     'FontWeight','normal',...
     'FontAngle','normal',...
     'NextPlot','replace',...
     'DrawMode','fast',...%     'XTickLabel',[],...
     'XTickLabelMode','auto',...
     'xtickmode','auto',...%it has to be manual after ploting
     'XTickLabelMode','auto',...
     'YTickLabel',[],...
     'Units','pixels',...
   'Color',[1 1 1], ...
	'Position',AxisSize, ...
	'Tag','Axes1', ...
	'XColor',[0 0 0], ...
	'YColor',[0 0 0], ...
   'ZColor',[0 0 0]);

%%%%%%%%%%%%%%%%%%%%%%% CHANNEL CHANGING INTERFACE
  Channel_LabelSz=[10 AxisSize(4)+45 40 20];  
  Fig.Channel_Label =uicontrol('Parent',Fig.Figure, ...
      'Units','pixels',...
		'BackgroundColor',[0.8 0.8 0.8], ...
      'FontName','Arial',...
      'FontUnits','points',...
      'FontSize',10,...
      'FontWeight','normal',...
      'FontAngle','normal',...
      'HorizontalAlignment','right', ...
		'Position',Channel_LabelSz, ...
		'String','HighT', ...
		'Style','text', ...
      'Tag','StaticText1');
Channel_LabelSz=[50 AxisSize(4)+45 50 20];  
Fig.Channel = uicontrol('Parent',Fig.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
   'callback','imagecalc Channel',...
   'ListboxTop',0, ...
   'Position',Channel_LabelSz, ...
   'Style','edit', ...
   'Tag','EditText2');
Channel_LabelSz=[140 AxisSize(4)+45 50 20];  
Fig.PercentMax = uicontrol('Parent',Fig.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
   'callback','imagecalc PercentMax',...
   'ListboxTop',0, ...
   'Position',Channel_LabelSz, ...
   'Style','edit', ...
   'String','75',...
   'Tag','EditText2');
Channel_LabelSz=[220 AxisSize(4)+45 40 20];  
Fig.Quant_Label =uicontrol('Parent',Fig.Figure, ...
      'Units','pixels',...
		'BackgroundColor',[0.8 0.8 0.8], ...
      'FontName','Arial',...
      'FontUnits','points',...
      'FontSize',10,...
      'FontWeight','normal',...
      'FontAngle','normal',...
      'HorizontalAlignment','right', ...
		'Position',Channel_LabelSz, ...
		'String','Quant:', ...
		'Style','text', ...
      'Tag','StaticText1');
Channel_LabelSz=[270 AxisSize(4)+45 70 20];  
Fig.Quant = uicontrol('Parent',Fig.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
   'ListboxTop',0, ...
   'Position',Channel_LabelSz, ...
   'Style','edit', ...
   'String',' ',...
   'Tag','EditText2');
Channel_LabelSz=[10 AxisSize(4)+75 40 20];  
Fig.Label =uicontrol('Parent',Fig.Figure, ...
      'Units','pixels',...
		'BackgroundColor',[0.8 0.8 0.8], ...
      'FontName','Arial',...
      'FontUnits','points',...
      'FontSize',10,...
      'FontWeight','normal',...
      'FontAngle','normal',...
      'HorizontalAlignment','right', ...
		'Position',Channel_LabelSz, ...
		'String','LowT:', ...
		'Style','text', ...
      'Tag','StaticText1');
Channel_LabelSz=[50 AxisSize(4)+75 50 20];  
Fig.LowT = uicontrol('Parent',Fig.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
   'ListboxTop',0, ...
   'Position',Channel_LabelSz, ...
   'Style','edit', ...
   'String','12.4',...
   'Tag','EditText2');
Channel_LabelSz=[360 AxisSize(4)+45 40 20];  
Fig.Label =uicontrol('Parent',Fig.Figure, ...
      'Units','pixels',...
		'BackgroundColor',[0.8 0.8 0.8], ...
      'FontName','Arial',...
      'FontUnits','points',...
      'FontSize',10,...
      'FontWeight','normal',...
      'FontAngle','normal',...
      'HorizontalAlignment','right', ...
		'Position',Channel_LabelSz, ...
		'String','Area', ...
		'Style','text', ...
      'Tag','StaticText1');
Channel_LabelSz=[410 AxisSize(4)+45 70 20];  
Fig.Area = uicontrol('Parent',Fig.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
   'ListboxTop',0, ...
   'Position',Channel_LabelSz, ...
   'Style','edit', ...
   'String',' ',...
   'Tag','EditText2');
Channel_LabelSz=[120 AxisSize(4)+75 50 20];  
Fig.Label =uicontrol('Parent',Fig.Figure, ...
      'Units','pixels',...
		'BackgroundColor',[0.8 0.8 0.8], ...
      'FontName','Arial',...
      'FontUnits','points',...
      'FontSize',10,...
      'FontWeight','normal',...
      'FontAngle','normal',...
      'HorizontalAlignment','right', ...
		'Position',Channel_LabelSz, ...
		'String','Max Val', ...
		'Style','text', ...
      'Tag','StaticText1');
Channel_LabelSz=[175 AxisSize(4)+75 40 20];  
Fig.MaxVal = uicontrol('Parent',Fig.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[.9 .9 .9], ...
   'ListboxTop',0, ...
   'Position',Channel_LabelSz, ...
   'Style','text', ...
   'String',' ',...
   'Tag','EditText2');
Channel_LabelSz=[250 AxisSize(4)+75 60 22];
Fig.Continue = uicontrol('Parent',Fig.Figure, ...
	'Units','pixels', ...
   'Callback','imagecalc Load',...
   'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
   'ListboxTop',0, ...
	'Position',Channel_LabelSz, ...
	'String','Load', ...
   'Style','Pushbutton', ...
   'Value',0,...
   'Tag','Pushbutton1');
%%%%%%%%%%%%%%%%%%%%%%%%%%%
% FULL SCALE CHECK BOX
%%%%%%%%%%%%%%%%%%%%%%%%
Checkboxsize=[400 470 190 20];      
  Fig.Binary=	uicontrol('Parent',Fig.Figure, ...
     		  'Units','pixels',...
     		  'Callback','imagecalc toggle',...
			  'FontName','Arial',...
			  'FontUnits','points',...
			  'FontWeight','normal',...
			  'FontAngle','normal',...
			  'Position',Checkboxsize,...
			  'Style','Checkbox',...
			  'String','Binary Image', ...
			  'Value',1,...
			  'Tag','Pushbutton1'); 


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  CONNEXIN SIZE & QUANTITY CALCULATION
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

figure(Fig.Figure)
icons = {['[ line([.2 .9 .5 .2 ],[.2 .2 .9 .2 ],''color'',''k'')]';
   	       '[ line([.1 .9 .5 .1 ],[.8 .8 .1 .8 ],''color'',''k'')]']};
callbacks=['imagecalc(''Increase Ch'')';'imagecalc(''Decrease Ch'')'];
PressType=['flash ';'flash '];
iconsize=[105 AxisSize(4)+45 15 25];
Fig.ChnlChanging=	btngroup('ButtonID',['S1';'S2'],...
	         'Callbacks',callbacks,...
   	      'IconFunctions',str2mat(icons{:}),...
      	   'GroupID', 'School',...
	         'GroupSize',[2 1],...   
   	      'PressType',PressType,...
      	   'BevelWidth',.1,...
         	'units','pixels',...
            'Position',iconsize);
         
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%  Store Operators
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
         Channel_LabelSz=[560 140 60 20];  
Fig.Label =uicontrol('Parent',Fig.Figure, ...
      'Units','pixels',...
		'BackgroundColor',[0.8 0.8 0.8], ...
      'FontName','Arial',...
      'FontUnits','points',...
      'FontSize',10,...
      'FontWeight','normal',...
      'FontAngle','normal',...
      'HorizontalAlignment','right', ...
		'Position',Channel_LabelSz, ...
		'String','A Value', ...
		'Style','text', ...
      'Tag','StaticText1');
Channel_LabelSz=[630 140 40 15];  
Fig.AVal= uicontrol('Parent',Fig.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[.9 .9 .9], ...
   'ListboxTop',0, ...
   'Position',Channel_LabelSz, ...
   'Style','text', ...
   'String',' ',...
   'Tag','EditText2');
Channel_LabelSz=[560 80 60 20];  
Fig.Label =uicontrol('Parent',Fig.Figure, ...
      'Units','pixels',...
		'BackgroundColor',[0.8 0.8 0.8], ...
      'FontName','Arial',...
      'FontUnits','points',...
      'FontSize',10,...
      'FontWeight','normal',...
      'FontAngle','normal',...
      'HorizontalAlignment','right', ...
		'Position',Channel_LabelSz, ...
		'String','B Value', ...
		'Style','text', ...
      'Tag','StaticText1');
Channel_LabelSz=[630 80 40 15];  
Fig.BVal = uicontrol('Parent',Fig.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[.9 .9 .9], ...
   'ListboxTop',0, ...
   'Position',Channel_LabelSz, ...
   'Style','text', ...
   'String',' ',...
   'Tag','EditText2');
Channel_LabelSz=[560 30 50 20];  
Fig.Label =uicontrol('Parent',Fig.Figure, ...
      'Units','pixels',...
		'BackgroundColor',[0.8 0.8 0.8], ...
      'FontName','Arial',...
      'FontUnits','points',...
      'FontSize',10,...
      'FontWeight','normal',...
      'FontAngle','normal',...
      'HorizontalAlignment','right', ...
		'Position',Channel_LabelSz, ...
		'String','Ratio', ...
		'Style','text', ...
      'Tag','StaticText1');
Channel_LabelSz=[630 30 40 15];  
Fig.Result = uicontrol('Parent',Fig.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[.9 .9 .9], ...
   'ListboxTop',0, ...
   'Position',Channel_LabelSz, ...
   'Style','text', ...
   'String',' ',...
   'Tag','EditText2');

         
         
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   Cx Ratio Buttons
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    Checkboxsize=[580 200 70 20];      
    Fig.ROI=	uicontrol('Parent',Fig.Figure, ...
         'Units','pixels',...
         'FontName','times',...
         'Callback','imagecalc ROI',...
         'FontUnits','points',...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'Position',Checkboxsize,...
		   'Style','togglebutton',...
         'String','ROI', ...
		   'Value',0,...
         'Tag','Pushbutton1'); 
    Checkboxsize=[580 170 70 20];      
    Fig.StoreA=	uicontrol('Parent',Fig.Figure, ...
         'Units','pixels',...
         'FontName','times',...
         'Callback','imagecalc StoreA',...
         'FontUnits','points',...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'Position',Checkboxsize,...
		   'Style','pushbutton',...
         'String','Store A', ...
		   'Value',0,...
         'Tag','Pushbutton1'); 
    Checkboxsize=[580 110 70 20];      
    Fig.StoreB=	uicontrol('Parent',Fig.Figure, ...
         'Units','pixels',...
         'FontName','times',...
         'Callback','imagecalc StoreB',...
         'FontUnits','points',...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'Position',Checkboxsize,...
		   'Style','pushbutton',...
         'String','Store B', ...
		   'Value',0,...
         'Tag','Pushbutton1'); 
      
Channel_LabelSz=[560 90 60 20];  

set(Fig.Figure,'WindowButtonMotionFcn','Imagecalc(''Mouse Move'')')
set(Fig.Figure,'ResizeFcn','imagecalc(''ResizeFcn'')');
set(Fig.Figure,'WindowButtonDownFcn','imagecalc(''Mouse Down'')')
set(Fig.Figure,'WindowButtonUpFcn','imagecalc(''Mouse Up'')')


  [Fig.Filename, Fig.Pathname] = uigetfile('E:\*.tif', 'Open Tiff');
  set(Fig.Figure,'Name',['Image Quantification:  ',Fig.Filename]);
  if Fig.Pathname~=0
     [x,y]=imread([Fig.Pathname Fig.Filename]);
   [a1,a2,a3]=size(x);
   if a3>1
     x=rgb2gray(x);
   end
      x=double(x);
    loval=min(min(x));
  x=x-loval;
  Fig.hival=max(max(x));
Fig.image=x;
  temp=Fig.image;
  temp(find(Fig.image<.75*Fig.hival))=0;
  y=temp;
  Fig.yp=im2bw(y,0.5);

   set(Fig.Channel,'String',num2str(Fig.hival*.75))
 set(Fig.MaxVal,'String',num2str(Fig.hival));
   imagecalc('Calc')
 if get(Fig.Binary,'Value')
     imagesc(Fig.yp,'Parent',Fig.Axis);
  else
     imagesc(Fig.image,'Parent',Fig.Axis);
  end
  colormap(gray)
end % Ends the if ~isempty(Fig.Filename)



case 'Load'
   Fig.Line=[];
   Fig.Line1=[];
if ~isempty(Fig.Patch)
   delete(Fig.Patch);
   set(Fig.ROI,'value',0);
end

   [Fig.Filename, Fig.Pathname] = uigetfile([Fig.Pathname,'\*.tif'], 'Open Tiff');
   if Fig.Filename~=0
  [x,jet]=imread([Fig.Pathname Fig.Filename]);
   [a1,a2,a3]=size(x);
   if a3>1
      x=rgb2gray(x);
   end
      x=double(x);
 
  set(Fig.Figure,'Name',['Cx Quantification:  ',Fig.Filename]);
  loval=min(min(x));
  x=x-loval;
  Fig.image=x;
  Fig.hival=max(max(x));
  Thresh=str2num(get(Fig.Channel,'String'))+1;
  %  y=wthresh(Fig.image,'s',Thresh);
  temp=Fig.image;
  temp(find(Fig.image<Thresh))=0;
  y=temp;
  Fig.yp=im2bw(y,0.5);
  set(Fig.Quant,'String',num2str(sum(sum(Fig.yp))));
  if get(Fig.Binary,'Value')
     imagesc(Fig.yp,'Parent',Fig.Axis);
     colormap(gray)
 else
     imagesc(Fig.image,'Parent',Fig.Axis);
     colormap jet
  end
  sumhigh=sum(sum(Fig.yp));
  Threshlow=str2num(get(Fig.LowT,'String'));
  % y2=wthresh(Fig.image,'s',Threshlow);
  temp=Fig.image;
  temp(find(Fig.image<Threshlow))=0;
  y2=temp;
  
  yp2=im2bw(y2);
  sumlow=sum(sum(yp2));
else
   disp('NO FILE LOADED')
end

case 'StoreA'
   a=round(str2num(get(Fig.Quant,'String'))/str2num(get(Fig.Area,'String'))*10000)/100;
   set(Fig.AVal,'String',a);
   imagecalc('Calc');
   
   
case 'StoreB'
    a=round(str2num(get(Fig.Quant,'String'))/str2num(get(Fig.Area,'String'))*10000)/100;
    set(Fig.BVal,'String',a);
    imagecalc('Calc');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   INCREASE CHANNEL NUMBER 													  %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
case 'Channel'
  Thresh=str2num(get(Fig.Channel,'String'));
  % y=wthresh(Fig.image,'s',Thresh);
  temp=Fig.image;
  temp(find(Fig.image<Thresh))=0;
  y=temp;
  
  Fig.yp=im2bw(y);
  set(Fig.Quant,'String',num2str(sum(sum(Fig.yp))));
  if get(Fig.Binary,'Value')
     imagesc(Fig.yp,'Parent',Fig.Axis);
  else
     imagesc(Fig.image,'Parent',Fig.Axis);
  end
  
  
  sumhigh=sum(sum(Fig.yp));
  Threshlow=str2num(get(Fig.LowT,'String'));
%  y2=wthresh(Fig.image,'s',Threshlow);
  temp=Fig.image;
  temp(find(Fig.image<Threshlow))=0;
  y2=temp;
  
  yp2=im2bw(y2);
    
  sumlow=sum(sum(yp2));
  set(Fig.PercentMax,'String',num2str(round(Thresh/Fig.hival*100)));
  
  

case 'Increase Ch'
  Thresh=str2num(get(Fig.Channel,'String'))+1;
  set(Fig.Channel,'String',num2str(Thresh));
%  y=wthresh(Fig.image,'s',Thresh);
  temp=Fig.image;
  temp(find(Fig.image<Threshlow))=0;
  y=temp;
  
  Fig.yp=im2bw(y);
  set(Fig.Quant,'String',num2str(sum(sum(Fig.yp))));
  if get(Fig.Binary,'Value')
     imagesc(Fig.yp,'Parent',Fig.Axis);
  else
     imagesc(Fig.image,'Parent',Fig.Axis);
  end
  
  sumhigh=sum(sum(Fig.yp));
  Threshlow=str2num(get(Fig.LowT,'String'));
%  y2=wthresh(Fig.image,'s',Threshlow);
  temp=Fig.image;
  temp(find(Fig.image<Threshlow))=0;
  y=temp;

  yp2=im2bw(y2);
  sumlow=sum(sum(yp2));
  set(Fig.Percent,'String',num2str(sumhigh/sumlow*100));
  set(Fig.PercentMax,'String',num2str(round(Thresh/Fig.hival*100)));
  
case 'Thresh'
  temp=Fig.image;
  temp(find(Fig.image<Thresh))=0;
  y=temp;
  

      
case 'Decrease Ch'
  Thresh=str2num(get(Fig.Channel,'String'))-1;
  set(Fig.Channel,'String',num2str(Thresh));
%  y=wthresh(Fig.image,'s',Thresh);
  temp=Fig.image;
  temp(find(Fig.image<Thresh))=0;
  y=temp;

  Fig.yp=im2bw(y);
  set(Fig.Quant,'String',num2str(sum(sum(Fig.yp))));
  if get(Fig.Binary,'Value')
     imagesc(Fig.yp,'Parent',Fig.Axis);
  else
     imagesc(Fig.image,'Parent',Fig.Axis);
  end
  
  sumhigh=sum(sum(Fig.yp));
  Threshlow=str2num(get(Fig.LowT,'String'));
  %  y2=wthresh(Fig.image,'s',Threshlow);
  temp=Fig.image;
  temp(find(Fig.image<Threshlow))=0;
  y2=temp;

  yp2=im2bw(y2);
  sumlow=sum(sum(yp2));
  set(Fig.Percent,'String',num2str(sumhigh/sumlow*100));
  set(Fig.PercentMax,'String',num2str(round(Thresh/Fig.hival*100)));
  
  
case 'PercentMax'
   percent=str2num(get(Fig.PercentMax,'String'));
   set(Fig.Channel,'String',num2str(percent/100*Fig.hival))
   imagecalc('Channel')

case 'ResizeFcn'
  	FG_Size=get(Fig.Figure,'position');  %Figure Size
   AxisSize=[60 30 FG_Size(3)-100 FG_Size(4)-100];
   set(Fig.Axis,'Position',AxisSize)
   Channel_LabelSz=[10 AxisSize(4)+45 25 20];  
   set(Fig.Channel_Label,'Position',Channel_LabelSz)
   Channel_LabelSz=[40 AxisSize(4)+45 50 20];  
   set(Fig.Channel,'Position',Channel_LabelSz); 
   iconsize=[95 AxisSize(4)+45 15 25];
   set(Fig.ChnlChanging,'position',iconsize);
   LabelSz=[150 AxisSize(4)+45 300 20];  
   set(Fig.Error,'Position',LabelSz);
   
case 'toggle'
   Fig.Patch=[];
   set(Fig.ROI,'value',0);
  Thresh=str2num(get(Fig.Channel,'String'));
  set(Fig.Channel,'String',num2str(Thresh));
%  y=wthresh(Fig.image,'s',Thresh);
  temp=Fig.image;
  temp(find(Fig.image<Thresh))=0;
  y=temp;

  Fig.yp=im2bw(y);
  set(Fig.Quant,'String',num2str(sum(sum(Fig.yp))));
  if get(Fig.Binary,'Value')
     imagesc(Fig.yp,'Parent',Fig.Axis);
     colormap gray
  else
     imagesc(Fig.image,'Parent',Fig.Axis);
     colormap jet
  end
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  % CALCULATE
  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   
case 'Calc'
if get(Fig.ROI,'value')
%  Threshlow=str2num(get(Fig.LowT,'String'));
%  temp=Fig.image;
%  temp(find(Fig.image<.75*Fig.hival))=0;
%  y=temp;
%  Fig.yp=im2bw(y,0.5);
  xvals=round(get(Fig.Patch,'XData'));
  yvals=round(get(Fig.Patch,'YData'));
  if yvals(3)>yvals(1)
     yset=[yvals(1):yvals(3)];
  else
     yset=[yvals(3):yvals(1)];
  end
  if xvals(2)>xvals(1)
     xset=[xvals(1):xvals(2)];
  else
     xset=[xvals(2):xvals(1)];
  end
%  temp=Fig.image;
%  temp(find(Fig.image<Threshlow))=0;
%  y2=temp;
%  yp2=im2bw(y2);
  ROIimage=Fig.yp(yset,xset);
  sumlow=sum(sum(ROIimage));
  set(Fig.Quant,'String',num2str(sum(sum(ROIimage))));
  b=(yset(end)-yset(1)+1)*(xset(end)-xset(1)+1);
  set(Fig.Area,'String',b)
  set(Fig.Channel,'String',num2str(Fig.hival*.75))
  sumhigh=sum(sum(Fig.yp));
  Threshlow=str2num(get(Fig.LowT,'String'));
else
   set(Fig.Quant','String',[])
   set(Fig.Area,'String',[]);
end
aval=str2num(get(Fig.AVal,'String'));
bval=str2num(get(Fig.BVal,'String'));
if ~isempty(aval) & ~isempty(bval)
ratio=round(aval/bval*10000)/10000;
set(Fig.Result,'String',num2str(ratio));
end




   
   
case 'Save'
   if Fig.SaveValue==0;
      [Filename, Pathname] = uiputfile('c:\windows\desktop\*.*', 'Save File');
      if Filename~=0  % 2
         Fig.fid=fopen([Pathname Filename],'wb');
         first=['Filename,Percent Cx43,Area of Cells,Cx43 Quantity,Average Cx43 Size,Stdev Cx43 Size,Number of Gap Junctions,Median Cx43 Size'];
         fprintf(Fig.fid,'%s \n',first);
         Fig.SaveValue=1;
      end
   end
if Fig.SaveValue~=0
  Thresh=str2num(get(Fig.LowT,'String'))-1;
%  y=wthresh(Fig.image,'s',Thresh);
  temp=Fig.image;
  temp(find(Fig.image<Thresh))=0;
  y=temp;
  
  Fig.yp=im2bw(y);
  a1=(get(Fig.Percent,'String'));
  a=num2str(sum(sum(Fig.yp)));
  b=(get(Fig.Quant,'String'));
  c=(get(Fig.AvgCxSize,'String'));
  c1=(get(Fig.StdvCxSize,'String'));
  d=(get(Fig.NumCx,'String'));    
  e=(get(Fig.MedCxSize,'String'));
  second=[Fig.Filename,',',a1,',',a,',',b,',',c,',',c1,',',d,',',e,];
  fprintf(Fig.fid,'%s \n',second);
end

   
case 'All'
[Fig.Filename, Fig.Pathname] = uigetfile([Fig.Pathname,'\*.tif'], 'Open Tiff');
filenames=dir([Fig.Pathname,'\*.tif']);
Temp.AllFiles=filenames;
Temp.AllFileNames={};
x=[1:length(Temp.AllFiles)];
index=1;

for i=1:length(Temp.AllFiles);
      Temp.AllFileNames=[Temp.AllFileNames;{[Temp.AllFiles(i).name]}];
end
a=strvcat(Temp.AllFileNames);
b=a;
%b=sort(a)
%return

for i=1:length(Temp.AllFiles);
   [x,y]=imread([Fig.Pathname b(i,:)]);
   [a1,a2,a3]=size(x);
   if a3==3
     x=rgb2gray(x);
   end
     x=double(x);


   Fig.Filename=b(i,:);
   set(Fig.Figure,'Name',['Cx Quantification:  ',b(i,:)]);
   loval=min(min(x));
   x=x-loval;
   Fig.image=x;
   Fig.hival=max(max(x));
   Thresh=str2num(get(Fig.Channel,'String'))+1;
%   y=wthresh(Fig.image,'s',Thresh);
   temp=Fig.image;
   temp(find(Fig.image<Thresh))=0;
   y=temp;
  
   Fig.yp=im2bw(y,0.5);
   set(Fig.Quant,'String',num2str(sum(sum(Fig.yp))));
   if get(Fig.Binary,'Value')
      imagesc(Fig.yp,'Parent',Fig.Axis);
   else
      imagesc(Fig.image,'Parent',Fig.Axis);
   end
   colormap(gray)
   sumhigh=sum(sum(Fig.yp));
   Threshlow=str2num(get(Fig.LowT,'String'));
   %  y2=wthresh(Fig.image,'s',Threshlow);
   temp=Fig.image;
   temp(find(Fig.image<Threshlow))=0;
   y2=temp;
   
   yp2=im2bw(y2);
   sumlow=sum(sum(yp2));
   set(Fig.Percent,'String',num2str(sumhigh/sumlow*100));
   imagecalc('Calc');
   imagecalc('Save');
end
   
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%   MOUSE DOWN                            %
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

case 'Mouse Down'
   axes(Fig.Axis);
   Temp.currentpoint=round(get(gca,'currentpoint'));
   Temp.currentpoint=Temp.currentpoint(1,1:2);
   AxisPos=get(Fig.Axis,'YLim');
   Current_Axis=axis;
   if ishandle(Fig.Patch)
      PLocation=get(Fig.Patch,'XData');
      PLocation2=get(Fig.Patch,'YData');
      if Temp.currentpoint(1)<(PLocation(1)+5) & Temp.currentpoint(1)>PLocation(1)-5 & Temp.currentpoint(2)<=(AxisPos(2))
       % Right bar
         setptr(Fig.Figure,'closedhand')
         Fig.Mousedown=1;
    	elseif Temp.currentpoint(1)<(PLocation(2)+5) & Temp.currentpoint(1)>PLocation(2)-5 & Temp.currentpoint(2)<=(AxisPos(2))
       % Left bar
         setptr(Fig.Figure,'closedhand')
         Fig.Mousedown=2;
      elseif Temp.currentpoint(2)<(PLocation2(1)+5) & Temp.currentpoint(2)>PLocation2(1)-5 & Temp.currentpoint(2)<=(AxisPos(2))
         % Bottom Bar
         setptr(Fig.Figure,'hand')
         Fig.Mousedown=3;
      elseif Temp.currentpoint(2)<(PLocation2(3)+5) & Temp.currentpoint(2)>PLocation2(3)-5 & Temp.currentpoint(2)<=(AxisPos(2))
         % Top Bar
         setptr(Fig.Figure,'hand')
         Fig.Mousedown=4;
      else
         setptr(Fig.Figure,'arrow')
      end
   end
  
  


case 'Mouse Up'
	Fig.Mousedown=0;   
   setptr(Fig.Figure,'hand')
   imagecalc('Calc')
%   Fig.Pos=get(Fig.Patch,'XData');
   
   
case 'Mouse Move'
        Temp.currentpoint=round(get(Fig.Axis,'currentpoint'));
        Temp.currentpoint=Temp.currentpoint(1,1:2);
        AxisPos=get(Fig.Axis,'YLim');
   if ishandle(Fig.Patch)
      PLocation=get(Fig.Patch,'XData');
      PLocation2=get(Fig.Patch,'YData');
      if Temp.currentpoint(1)<(PLocation(1)+5) & Temp.currentpoint(1)>PLocation(1)-5 & Temp.currentpoint(2)<=(AxisPos(2))
         setptr(Fig.Figure,'hand')
      elseif Temp.currentpoint(1)<(PLocation(2)+5) & Temp.currentpoint(1)>PLocation(2)-5 & Temp.currentpoint(2)<=(AxisPos(2))
         setptr(Fig.Figure,'hand')
      elseif Temp.currentpoint(2)<(PLocation2(1)+5) & Temp.currentpoint(2)>PLocation2(1)-5 & Temp.currentpoint(2)<=(AxisPos(2))
         setptr(Fig.Figure,'hand')
      elseif Temp.currentpoint(2)<(PLocation2(3)+5) & Temp.currentpoint(2)>PLocation2(3)-5 & Temp.currentpoint(2)<=(AxisPos(2))
         setptr(Fig.Figure,'hand')
      else
         setptr(Fig.Figure,'arrow')
      end
      if Fig.Mousedown~=0;
         Axispos=get(Fig.Axis,'XLim');
         if Fig.Mousedown==1 & Temp.currentpoint(1)>0 & Temp.currentpoint(1)<Axispos(2)
            set(Fig.Patch,'XData',[Temp.currentpoint(1) PLocation(2) PLocation(2) Temp.currentpoint(1)])
            setptr(Fig.Figure,'closedhand')
         elseif Fig.Mousedown==2 & Temp.currentpoint(1)>0 & Temp.currentpoint(1)<Axispos(2)
            set(Fig.Patch,'XData',[PLocation(1) Temp.currentpoint(1) Temp.currentpoint(1) PLocation(1) ])
            setptr(Fig.Figure,'closedhand')
         elseif Fig.Mousedown==3 & Temp.currentpoint(1)>0 & Temp.currentpoint(1)<Axispos(2)
            set(Fig.Patch,'YData',[Temp.currentpoint(2) Temp.currentpoint(2) PLocation2(3)  PLocation2(3) ])
            setptr(Fig.Figure,'closedhand')
         elseif Fig.Mousedown==4 & Temp.currentpoint(1)>0 & Temp.currentpoint(1)<Axispos(2)
            set(Fig.Patch,'YData',[PLocation2(1)   PLocation2(1) Temp.currentpoint(2) Temp.currentpoint(2)])
            setptr(Fig.Figure,'closedhand')
         else
	         setptr(Fig.Figure,'arrow')
	      end
      end
      
   Fig.Pos=get(Fig.Patch,'XData');
   end
   
   
case 'ROI'
   if get(Fig.ROI,'value')==1
      %Create a new patch and save it in Stripchart.Patch.HD_Old
         Position=get(Fig.Axis,'XLim');
         axes(Fig.Axis);
         Current_Axis=axis;
         Fig.PatchY=[(Current_Axis(3)+Current_Axis(2))/2 (Current_Axis(3)+Current_Axis(2))/2 Current_Axis(4)/2.5 Current_Axis(4)/2.5];
         
         %0=unuse 1=exist 2=just create.
         %you have to change for 2 to 1 if created successfully ,or to 0 if unsuccessfully
         Fig.Pos=round([(Position(2)-Position(1))/1.5 (Position(2)-Position(1))/2.5]);         
         Fig.Patch=patch(...
            'CData',[],...
            'CDataMapping','scaled',...
            'FaceVertexCData',[],...	         'EdgeColor',[[0.5+[rand rand rand]/2]],...
            'EdgeColor',[.8 .3 .3],...
	         'EraseMode','xor',...
            'FaceColor','none',...
            'Faces',[1 2 3 4 5],...
            'LineStyle','-',...
            'LineWidth',2,...
            'Marker','none',...
            'MarkerEdgeColor','auto',...
            'MarkerFaceColor','none',...
            'MarkerSize',[2],...
            'XData',[Fig.Pos(1) Fig.Pos(2) Fig.Pos(2) Fig.Pos(1)],...
            'YData',Fig.PatchY);
      else
         if ~isempty(Fig.Patch)
            delete(Fig.Patch)
         end
      end
      
         
   
   
   
case 'Exit'
   close(Fig.Figure)
   fclose all;
  
end

