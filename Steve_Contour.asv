function [varargout]=Steve_Contour(varargin)
action = varargin{1};
global Log Contour Steve Stripchart Data
switch action
%================================================================
case 'Initial'
   Steve.Applied=0;
   Steve.Members=0;
   Steve.Set=0;
   Steve.Append=0;
   Steve.LineAngle=[];
   Steve.fid=[];
   Steve.RT=0;
   Steve.Ch=[];
   Steve.DisplayRT=[];
   %FG_Size=[1 35 Log.UD.HD.LUTDisplay.FG_Limit];
   Contour=get(gcbf,'userdata');
   Stripchart=get(Contour.Parent,'userdata');
%             FG_Size=[500 300 650 675];

            a=dir('SteveContParams.mat');
            if ~isempty(a)
            load SteveContParams
            [xx,yy]=size(SteveContParams.FGSize);
            Distance=num2str(SteveContParams.Distance);
            Angle=num2str(SteveContParams.Angle);
            if xx>1
                SteveContParams.FGSize=[500 500 430 500];
            end
            else
                SteveContParams.FGSize=[500 500 430 500];
                Distance=10;
                Angle=10;
            end
            FG_Size=SteveContParams.FGSize;
           
            Steve.Figure=figure;
            Steve.Parent=Steve.Figure;
            set(Steve.Figure,'Units','pixels', ...
               'Color',Contour.Color,...%     'HandleVisibility','off',...
               'menu','none',...
               'Name',[Stripchart.Head.FileName ':Auto Vector Calc'],...
               'NumberTitle','off',...
               'unit','pixel',...     
               'PaperPositionMode','auto',...If you make it auto, pagedlg won't work
               'Position',FG_Size, ...
               'selected','on',...
               'Tag','Contour',...
               'DeleteFcn','Steve_Contour(''DeleteFcn'');',...
               'visible','off');
            Steve.AxesSz=[5 190 FG_Size(3)-10 FG_Size(4)-200];
            Steve.Xlim=[min(Contour.Ch_XY(:,2))-.5 max(Contour.Ch_XY(:,2))+.5];
            Steve.Ylim=[min(Contour.Ch_XY(:,3))-.5 max(Contour.Ch_XY(:,3))+.5];
            Steve.YDir=-1;   
            %set(Contour.Axes,'xlim',[min(Contour.Ch_XY(:,2))-.5 max(Contour.Ch_XY(:,2))+.5],'ylim',[min(Contour.Ch_XY(:,3))-.5 max(Contour.Ch_XY(:,3))+.5]);
            Steve.Axes = axes('Parent',Steve.Figure, ...
               'box','off',...
               'Color',[1 1 1], ...%'xlabel',[],...%     	
               'FontName','Arial',...
               'FontUnits','points',...
               'FontSize',Log.UD.Ref.FontSize,...
               'FontWeight','normal',...
               'FontAngle','normal',...
               'NextPlot','add',...%To add the colorbar
               'DrawMode','fast',...%     'XTickLabel',[],...
               'xlim',Steve.Xlim,...
               'ylim',Steve.Ylim,...
               'XTickLabel',[],...
               'XTickLabelMode','manual',...
               'XTickMode','manual',...
               'YDir','reverse',...
               'YTickLabel',[],...
               'YTickLabelMode','manual',...
               'YTickMode','manual',...
               'Units','pixel',...   
               'Position',Steve.AxesSz);%[4 158 413 270]);
 boxcolor=[0.92 0.92 0.92];                          

            %-----------------------------
            %Vector
         Steve.Text.AverageL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',Contour.Color, ...
               'ListboxTop',0, ...  
               'FontWeight','bold',...
               'Units','pixel',...   
               'Position',[335 140 50 15], ...
               'String','Members', ...
               'Style','text', ...
               'Tag','Vector Type');
           Steve.Text.MembersM = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[340 125 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            
            
       Steve.Text.AverageL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',Contour.Color, ...
       			'HorizontalAlignment','center',...   	
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[215 160 110 25], ...
               'String','Propagation Magnitude (m/s)', ...
               'Style','text', ...
               'Tag','Vector Type');
         Steve.Text.AverageL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[220 140 40 15], ...
               'String','Mean', ...
               'Style','text', ...
               'Tag','Vector Type');
         Steve.Text.AverageM = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[270 140 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            Steve.Text.MedianL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[220 120 40 15], ...
               'String','Median', ...
               'Style','text', ...
               'Tag','Vector Type');
            Steve.Text.MedianM = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[270 120 40 15], ...
               'String',[], ...
               'Style','text', ...
               'Tag','Vector Type');
            Steve.Text.STDL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...    
               'Units','pixel',...   
               'Position',[220 100 40 15], ...
               'String','STDV', ...
               'Style','text', ...
               'Tag','Vector Type');
            Steve.Text.STDM = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...    
               'Units','pixel',...   
               'Position',[270 100 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            
            
        Steve.Text.AverageL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',Contour.Color, ...
               'ListboxTop',0, ...   
               'HorizontalAlignment','center',...
               'Units','pixel',...   
               'Position',[215 65 100 28], ...
               'String','Propagation Angle (deg)', ...
               'Style','text', ...
               'Tag','Vector Type');
         Steve.Text.AverageL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[220 45 40 15], ...
               'String','Mean', ...
               'Style','text', ...
               'Tag','Vector Type');
         Steve.Text.AverageA = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[270 45 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            Steve.Text.MedianL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[220 25 40 15], ...
               'String','Median', ...
               'Style','text', ...
               'Tag','Vector Type');
            Steve.Text.MedianA = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[270 25 40 15], ...
               'String',[], ...
               'Style','text', ...
               'Tag','Vector Type');
        Steve.Text.STDL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...    
               'Units','pixel',...   
               'Position',[220 5 40 15], ...
               'String','STDV', ...
               'Style','text', ...
               'Tag','Vector Type');
        Steve.Text.STDA = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...    
               'Units','pixel',...   
               'Position',[270 5 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            
         Steve.Text.AverageL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',Contour.Color, ...
               'ListboxTop',0, ... 
               'Fontweight','bold',...
               'HorizontalAlignment','center',...
               'Units','pixel',...   
               'Position',[330 65 65 28], ...
               'String','Anatomical Angle(deg)', ...
               'Style','text', ...
               'Tag','Vector Type');
        Steve.Text.LineAngle = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[340 45 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');

            
         Steve.Button.Apply = uicontrol('Parent',Steve.Figure,...
               'ListboxTop',0, ...    
               'enable','off',...
               'Units','pixel',...   
               'Position',[10 10 60 20], ...
               'String','Apply', ...
               'tag','Button Apply',...
               'callback','Steve_Contour(''Apply'')');
%  Steve.Button.Ben=	btngroup(Steve.Figure,...
  Steve.Button.Ben=	btngroup(Steve.Figure,...
           'ButtonID','Butt',...
           'callback','Steve_Contour(''Ben'')',...
           'ButtonColor',[1 1 1],...
           'GroupID', 'ViewGraph',...
           'GroupSize',[1 1],...  
   	     'PressType','Flash',...
      	  'BevelWidth',0,...
           'units','pixels',...
           'Position',[370 0 30 30]); 
        Steve.Button.Graph = uicontrol('Parent',Steve.Figure,...
               'ListboxTop',0, ...    
               'enable','on',...
               'Units','pixel',...   
               'Position',[90 10 70 20], ...
               'String','Clear', ...
               'tag','Button Apply',...
               'callback','Steve_Contour(''Clear'')');
 
            
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 % USER INPUT
             %-----------------------------
            %Vector
         Steve.Text.junk = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',Contour.Color, ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[20 170 110 15], ...
               'String','Distance from Line', ...
               'Style','text', ...
               'Tag','Vector Type');
         Steve.Edit.Distance = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[1 1 1], ...
               'enable','on',...
               'ListboxTop',0, ...         
               'Units','pixel',...   
               'Position',[20 149 40 20], ...
               'string',Distance,...
               'Style','edit', ...
               'Tag','Time Type',...
               'callback','Steve_Contour(''Change'')');
         Steve.Text.junk = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[65 151 40 15], ...
               'String','Pixels', ...
               'Style','text', ...
               'Tag','Vector Type');
        Steve.Text.junk = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',Contour.Color, ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[20 128 110 15], ...
               'String','Include Angles within Arc', ...
               'Style','text', ...
               'Tag','Vector Type');
         Steve.Edit.Angle = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[1 1 1], ...
               'enable','on',...
               'ListboxTop',0, ...         
               'Units','pixel',...   
               'Position',[20 105 40 20], ...
               'string',Angle,...
               'Style','edit', ...
               'Tag','Time Type',...
               'callback','Steve_Contour(''Change'')');
         Steve.Text.junk = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[65 105 40 15], ...
               'String','Degrees', ...
               'Style','text', ...
               'Tag','Vector Type');
            
            
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 % THE BUTTONS FOR MAKING THE LINE
 
  Steve.Text.junk = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',Contour.Color, ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[20 80 110 15], ...
               'String','Propagation', ...
               'Style','text', ...
               'Tag','Vector Type');
   Steve.Button.Start=	uicontrol('Parent',Steve.Figure, ...
         'Units','pixels',...
         'FontUnits','points',...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'Position',[25 65 45 15],...
		   'Style','togglebutton',...
         'String','Start', ...
         'callback','Steve_Contour(''Check1'');', ...
		   'Value',0,...
         'Tag','Pushbutton1'); 
    Steve.Button.Finish=	uicontrol('Parent',Steve.Figure, ...
         'Units','pixels',...
         'FontUnits','points',...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'Position',[25 50 45 15],...
		   'Style','togglebutton',...
         'String','End', ...
         'callback','Steve_Contour(''Check2'');', ...
 		   'Value',0,...
         'Tag','Pushbutton1'); 
      
      
      % THE LINE IN THE BOX
       Contour.Frame.Main = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','off',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[185 10 1 170], ...
               'Style','frame', ...
               'Tag','Time Type');





Temp.File={'Save'            ''                                ' '
			  '>Save Summary'   'Steve_Contour(''Save'')'          ' '
			  '>Export Vectors' 'Steve_Contour(''Export'')'        ' '
              '>Save Selected Vectors' 'Steve_Contour(''Select'')' ' '};                  

            
Steve.Filemenu=makemenu(Steve.Figure,char(Temp.File(:,1)),char(Temp.File(:,2)), char(Temp.File(:,3)));

Temp.File={'Rise Time' 		  'Steve_Contour(''RiseInitial'')'  ' '};                  
Steve.Filemenu2=makemenu(Steve.Figure,char(Temp.File(:,1)),char(Temp.File(:,2)), char(Temp.File(:,3)));
  
            set(Steve.Figure,'userdata',Contour);
            set(Steve.Figure,'visible','on');
            set(Steve.Figure,'WindowButtonDownFcn','Steve_Contour(''Mouse Down'')')
%             Zeng_Contour('Setting','ClrMap','Jet'); % Edit 102213
            set(Steve.Figure,'ResizeFcn','Steve_Contour(''ResizeFcn'')'); % Edit 102213
            %-------------------------
            %To plot image
            axes(Steve.Axes)

            Steve_Contour('Plot')
            Steve.Vector.NewMags=1000*ones(1,length(Contour.Ch_XY));







case 'Plot'
%       Mag2=Contour.Vector.Vx.^2+Contour.Vector.Vy.^2;
             if get(Contour.Check.Inverse,'Value')
      		   Mag2=Contour.Vector.Vx.^2+Contour.Vector.Vy.^2;
               Vector=quiver(Contour.Vector.X,Contour.Vector.Y,Contour.Vector.Vx./Mag2,Contour.Vector.Vy./Mag2);
             else
               Vector=quiver(Contour.Vector.X,Contour.Vector.Y,Contour.Vector.Vx,Contour.Vector.Vy);
             end

 %      Vector=quiver(Contour.Vector.X,Contour.Vector.Y,Contour.Vector.Vx.^-1,Contour.Vector.Vy.^-1);
       
       
       
       
       
case 'Mouse Down'
q=get(Steve.Axes,'currentpoint');
 if get(Steve.Button.Start,'Value')==1 & q(1,1)>.4 & q(1,1)<Contour.Xlim(2) & q(1,2)>.4 & q(1,2)<Contour.Ylim(2)
   Steve.Set=0;
   Contour=get(Steve.Figure,'userdata');
   Steve.currentpoint=get(Steve.Axes,'currentpoint');
   Steve.currentpoint=Steve.currentpoint(1,1:2);
  XY=Steve.currentpoint;
  if ~isempty(findobj(Steve.Axes,'type','patch','tag','A'))
      delete(findobj(Steve.Axes,'type','patch','tag','A'))
  end
  
     Steve.MarkerA=patch(...
      'CData',[],...
      'CDataMapping','scaled',...
      'FaceVertexCData',[],...	         'EdgeColor',[[0.5+[rand rand rand]/2]],...
      'EraseMode','xor',...
      'FaceColor','none',...
      'Faces',[1 2 3 4 5],...
      'LineStyle','-',...
      'LineWidth',2,...
      'Marker','O',...%Don't change
      'MarkerEdgeColor',[0 1 0],...%Don't change
      'MarkerSize',[2],...
      'tag','A',...
      'XData',[XY(1)],...
      'YData',[XY(2)]);
  
elseif get(Steve.Button.Finish,'Value')==1 & q(1,1)>0.4 & q(1,1)<Contour.Xlim(2) & q(1,2)>.4 & q(1,2)<Contour.Ylim(2)
      Steve.Set=0;
   Contour=get(Steve.Figure,'userdata');
   Steve.currentpoint=get(Steve.Axes,'currentpoint');
   Steve.currentpoint=(Steve.currentpoint(1,1:2));
  XY=Steve.currentpoint;
  if ~isempty(findobj(Steve.Axes,'type','patch','tag','B'))
      delete(findobj(Steve.Axes,'type','patch','tag','B'))
  end
  
     Steve.MarkerB=patch(...
      'CData',[],...
      'CDataMapping','scaled',...
      'FaceVertexCData',[],...	         'EdgeColor',[[0.5+[rand rand rand]/2]],...
      'EraseMode','xor',...
      'FaceColor',[1 0 0],...
      'LineStyle','-',...
      'LineWidth',4,...
      'Marker','O',...%Don't change
      'MarkerEdgeColor',[1 0 0],...%Don't change
      'MarkerSize',3,...
      'tag','B',...
      'XData',[XY(1)],...
      'YData',[XY(2)]);
else
 %       'FaceColor','none',...
%       'Faces',[1 2 3 4 5],...     
    set(Steve.Button.Apply,'Enable','on');   
   Steve.Set=1;    
       
       
   Contour.Vector.Magnitude=sqrt((Contour.Vector.X-Contour.Vector.Vx).^2+(Contour.Vector.Y-Contour.Vector.Vy).^2);
   
      Steve.currentpoint=get(Steve.Axes,'currentpoint');
      Steve.currentpoint=round(Steve.currentpoint(1,1:2));
      V=[Contour.Vector.X Contour.Vector.Y];
      Temp.Ch=find(V(:,1)==Steve.currentpoint(1) &  V(:,2)==Steve.currentpoint(2));
      if ~isempty(Temp.Ch)
    if (Contour.Vector.Vx(Temp.Ch)<0 & Contour.Vector.Vy(Temp.Ch)>0) | (Contour.Vector.Vx(Temp.Ch)>0 & Contour.Vector.Vy(Temp.Ch)>0) 
       Contour.Vector.Angle=180/pi*(atan2(-Contour.Vector.Vy,Contour.Vector.Vx))+360;   
    else
       Contour.Vector.Angle=180/pi*(atan2(-Contour.Vector.Vy,Contour.Vector.Vx));
   end
   
   if  str2num(get(Steve.Text.AverageA,'String'))>270 & Contour.Vector.Angle(Temp.Ch)<90 & ~isempty(get(Steve.Text.MedianA,'String'))
      Contour.Vector.Angle=Contour.Vector.Angle+360;
   elseif str2num(get(Steve.Text.AverageA,'String'))<90 & Contour.Vector.Angle(Temp.Ch)>270 & ~isempty(get(Steve.Text.MedianA,'String'))
      Contour.Vector.Angle=Contour.Vector.Angle-360;
   end
   
warning off
              Temp.Current=find(Contour.Type.Ch==Contour.Ch_XY(Temp.Ch,1));
              Steve.Vector.OldMagnitude=str2num(get(Steve.Text.AverageM,'String'));
              Steve.Vector.OldAngle=str2num(get(Steve.Text.AverageA,'String'));
          if  isempty(Temp.Current)
             Steve.Vector.NewAngs(Temp.Ch)=Contour.Vector.Angle(Temp.Ch);
             if get(Contour.Check.Inverse,'Value')
                Steve.Vector.NewMags(Temp.Ch)=1/Contour.Vector.V(Temp.Ch);
             else
                Steve.Vector.NewMags(Temp.Ch)=Contour.Vector.V(Temp.Ch);
                ccc=Steve.Vector.NewMags(Temp.Ch);
             end
	 		   Steve.Points=find(Steve.Vector.NewMags<999);
               Steve.Vector.NewMagnitude=(mean(Steve.Vector.NewMags(Steve.Points)));
			   Steve.Vector.MagMed=median(Steve.Vector.NewMags(Steve.Points));               
               Steve.Vector.MagStd=std(Steve.Vector.NewMags(Steve.Points));
               Steve.Vector.NewAngle=mean(Steve.Vector.NewAngs(Steve.Points));
  			   Steve.Vector.AngMed=median(Steve.Vector.NewAngs(Steve.Points));               
               Steve.Vector.AngStd=std(Steve.Vector.NewAngs(Steve.Points));
               Steve.Members=Steve.Members+1;
               Steve_Contour('Marker',Steve.Figure,Contour.Ch_XY(Temp.Ch,1),Steve.currentpoint);
              if Steve.RT==1
               V=[Contour.Ch_XY(:,2) Contour.Ch_XY(:,3)];
               Temp.Ch=Contour.Ch_XY(find(V(:,1)==Steve.currentpoint(1) &  V(:,2)==Steve.currentpoint(2)),1)+1;
               Steve.Ch=Temp.Ch;
               Steve.DisplayRT(Steve.Ch)=Steve.RiseTime(Temp.Ch)-(Contour.VP.X/ccc);
               % dVdt
               Steve.DisplayRT(Steve.Ch)=Steve.RiseTime(Temp.Ch);
               %a=[Steve.RiseTime(Temp.Ch) Steve.DisplayRT(Steve.Ch)]
              end
          else
               Contour.Type.Ch(Temp.Current)=[];
               set(Steve.Figure,'userdata',Contour);
               delete(findobj(Steve.Axes,'type','patch','tag',num2str(Contour.Ch_XY(Temp.Ch,1))))
               Steve.Members=Steve.Members-1;
               if Steve.Members==0
                  Steve_Contour('Clear');
                  Steve.Vector.NewMagnitude=0;
                  Steve.Vector.MagMed=[];
                  Steve.Vector.AngMed=[];
                  Steve.Vector.NewAngle=0;
                  Steve.Vector.MagStd=0;
                  Steve.Vector.AngStd=0;
                  Steve.DisplayRT=[];
                  Steve.Points=[];
               else
 				  Steve.Vector.NewMags(Temp.Ch)=1000;
 				  Steve.Points=find(Steve.Vector.NewMags<999);
				  Steve.Vector.NewAngs(Temp.Ch)=0;
                  Steve.Vector.NewMagnitude=(mean(Steve.Vector.NewMags(Steve.Points)));
				  Steve.Vector.MagMed=median(Steve.Vector.NewMags(Steve.Points));               
                  Steve.Vector.MagStd=std(Steve.Vector.NewMags(Steve.Points));
				  Steve.Vector.NewAngs(Temp.Ch)=Contour.Vector.Angle(Temp.Ch);
                  Steve.Vector.NewAngle=mean(Steve.Vector.NewAngs(Steve.Points));
  				  Steve.Vector.AngMed=median(Steve.Vector.NewAngs(Steve.Points));               
                  Steve.Vector.AngStd=std(Steve.Vector.NewAngs(Steve.Points));
            if Steve.RT==1
               V=[Contour.Ch_XY(:,2) Contour.Ch_XY(:,3)];
               Temp.Ch=Contour.Ch_XY(find(V(:,1)==Steve.currentpoint(1) &  V(:,2)==Steve.currentpoint(2)),1)+1;
               Steve.Ch=Temp.Ch;
               Steve.DisplayRT(Steve.Ch)=0;
            end
              end
                 if isempty(findobj(Steve.Axes,'type','patch','Marker','+','MarkerEdgeColor',[1 0 0]));
                  if ~isempty(Contour.Type.Ch)
                     set(findobj('type','patch','Marker','+','tag',num2str(Contour.Type.Ch(length(Contour.Type.Ch)))),'MarkerEdgeColor',[1 0 0])
                  end
               end

            end
             Steve_Contour('Update')   
             disp('******************************************')    
             disp('Mean, Median, Stdev, Members')
[Steve.Vector.NewMagnitude, Steve.Vector.MagMed, Steve.Vector.MagStd, Steve.Members]     
 end
end % End the check if get(Steve.Button.start........      
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
%------------------------------------------------------------------
if ~isempty(findobj(Steve.Axes,'type','patch','tag','A')) & ~isempty(findobj(Steve.Axes,'type','patch','tag','B')) & Steve.Set==0;
   Steve.Set=0;
   if ~isempty(findobj(Steve.Axes,'Tag','Line'))
      delete(Steve.Line);
   end
   
   X(1)=get(Steve.MarkerA,'XData');
   X(2)=get(Steve.MarkerB,'XData');
   Y(1)=get(Steve.MarkerA,'YData');
   Y(2)=get(Steve.MarkerB,'YData');
   Steve.Line=line(X,Y,'Linewidth',2,'Color',[0 1 0],'Tag','Line');
  % Steve_Contour('ClearPoints')
  Steve_Contour('Clear1')
  Steve.LineAngle=180/pi*atan2((Y(1)-Y(2)),(X(2)-X(1)));
   if Steve.LineAngle<0
      Steve.LineAngle=Steve.LineAngle+360;
   end
  Steve_Contour('Update')
   Y1=round(Y);
   X1=round(X);
   w=str2num(get(Steve.Edit.Distance,'String'));
   rows=[floor(min(Y1)):ceil(max(Y1))];
for row=min(Y1)-w:1:max(Y1)+w  % FOR 1
 for col=min(X1)-w:1:max(X1)+w;  % FOR 2
   count=1;
       %for dist=0:w*2;
       m=(Y(1)-Y(2))/(X(1)-X(2));
       b=Y(1)-m*X(1);
       x2=round(col);
       y2=round(row);
       if (m<10 & m>.5) | (m>-10 & m<-.5)
            x=(y2-b+m*x2)/(2*m);
            y=m*x+b;
            dist=sqrt((x-x2)^2+(y-y2)^2);
            if dist<w & x<=max(X1) & x>=min(X1) & y<=max(Y1) & y>=min(Y1)
               Steve.currentpoint=[x2 y2];
            else
               Steve.currentpoint=[-1 -1];
            end
         elseif (m<.5 & m>=0) | (m>-.5 & m>=0)
            Steve.currentpoint=[col row];
         else
        	   Steve.currentpoint=[col row];
         end
      	V=[Contour.Vector.X Contour.Vector.Y];
 %     	Temp.Ch=find((Steve.currentpoint(1)>V(:,1)-w & Steve.currentpoint(1)<V(:,1)+w) &  (Steve.currentpoint(2)<V(:,2)+w & Steve.currentpoint(2)>V(:,2)-w));
      	Temp.Ch=find((V(:,1)==Steve.currentpoint(1) & V(:,2)==Steve.currentpoint(2)));
     
      
if ~isempty(Temp.Ch) %(1)
    if ((Contour.Vector.Vx(Temp.Ch)<0 & Contour.Vector.Vy(Temp.Ch)>0)) | ((Contour.Vector.Vx(Temp.Ch)>0 & Contour.Vector.Vy(Temp.Ch)>0)) 
       Contour.Vector.Angle=180/pi*(atan2(-Contour.Vector.Vy,Contour.Vector.Vx))+360;   
    else
       Contour.Vector.Angle=180/pi*(atan2(-Contour.Vector.Vy,Contour.Vector.Vx));
   end
%   if  str2num(get(Steve.Text.AverageA,'String'))>270 & Contour.Vector.Angle(Temp.Ch)<90 & ~isempty(get(Steve.Text.MedianA,'String'))
   if  str2num(get(Steve.Text.LineAngle,'String'))>270 & Contour.Vector.Angle(Temp.Ch)<90 %& ~isempty(get(Steve.Text.MedianA,'String'))
      Contour.Vector.Angle=Contour.Vector.Angle+360;
%   elseif str2num(get(Steve.Text.AverageA,'String'))<90 & Contour.Vector.Angle(Temp.Ch)>270 & ~isempty(get(Steve.Text.MedianA,'String'))
   elseif str2num(get(Steve.Text.LineAngle,'String'))<90 & Contour.Vector.Angle(Temp.Ch)>270 %& ~isempty(get(Steve.Text.MedianA,'String'))
      Contour.Vector.Angle=Contour.Vector.Angle-360;
   end
       Steve.Arc=str2num(get(Steve.Edit.Angle,'String'));
       lowlineangle=(Steve.LineAngle-Steve.Arc);
       highlineangle=(Steve.LineAngle+Steve.Arc);
       a=Contour.Vector.Angle(Temp.Ch);   
   
warning off
              Temp.Current=find(Contour.Type.Ch==Contour.Ch_XY(Temp.Ch,1));
              Steve.Vector.OldMagnitude=str2num(get(Steve.Text.AverageM,'String'));
              Steve.Vector.OldAngle=str2num(get(Steve.Text.AverageA,'String'));
              
          if  isempty(Temp.Current) & a<highlineangle & a>lowlineangle%(2)
               Steve.Vector.NewAngs(Temp.Ch)=Contour.Vector.Angle(Temp.Ch);
             if get(Contour.Check.Inverse,'Value')
                Steve.Vector.NewMags(Temp.Ch)=1/Contour.Vector.V(Temp.Ch);
             else
                Steve.Vector.NewMags(Temp.Ch)=Contour.Vector.V(Temp.Ch);
             end
	 		   Steve.Points=find(Steve.Vector.NewMags<999);
               Steve.Vector.NewMagnitude=(mean(Steve.Vector.NewMags(Steve.Points)));
			   Steve.Vector.MagMed=median(Steve.Vector.NewMags(Steve.Points));               
               Steve.Vector.MagStd=std(Steve.Vector.NewMags(Steve.Points));
               Steve.Vector.NewAngle=mean(Steve.Vector.NewAngs(Steve.Points));
  			   Steve.Vector.AngMed=median(Steve.Vector.NewAngs(Steve.Points));               
               Steve.Vector.AngStd=std(Steve.Vector.NewAngs(Steve.Points));
               Steve.Members=Steve.Members+1;
               Steve_Contour('Marker',Steve.Figure,Contour.Ch_XY(Temp.Ch,1),Steve.currentpoint);
               if Steve.RT==1
                    V=[Contour.Ch_XY(:,2) Contour.Ch_XY(:,3)];
                    Temp.Ch=Contour.Ch_XY(find(V(:,1)==Steve.currentpoint(1) &  V(:,2)==Steve.currentpoint(2)),1)+1;
                    Steve.DisplayRT(Steve.Ch)=Steve.RiseTime(Temp.Ch)-(Contour.VP.X/Steve.Vector.NewMags(Temp.Ch));
                    Steve.DisplayRT(Steve.Ch)=Steve.RiseTime(Temp.Ch);
                    Steve.Ch=Temp.Ch;
                    Steve.DisplayRT(Steve.Ch)=Steve.RiseTime(Temp.Ch);
               end

            end % End (2)
            
       Steve_Contour('Update')    
           end % End (1)

         
 %end        
end  % END FOR 1
end  % END FOR 2
%Steve_Contour('Apply')
end

   
   

   
   

case 'Marker'
   Contour=get(varargin{2},'userdata');
   Ch=varargin{3};
   XY=varargin{4};
   LastMarker=findobj(Steve.Axes,'type','patch','Marker','+','MarkerEdgeColor',[1 0 0]);
   if ~isempty(LastMarker)
      set(LastMarker,'MarkerEdgeColor',[0 0 1])
   end
   
   Marker=patch(...
      'CData',[],...
      'CDataMapping','scaled',...
      'FaceVertexCData',[],...	         'EdgeColor',[[0.5+[rand rand rand]/2]],...
      'EraseMode','xor',...
      'FaceColor','none',...
      'Faces',[1 2 3 4 5],...
      'LineStyle','-',...
      'LineWidth',8,...
      'Marker','+',...%Don't change
      'MarkerEdgeColor',[1 0 0],...%Don't change
      'MarkerSize',[4],...
      'tag',num2str(Ch),...
      'XData',[XY(1)],...
      'YData',[XY(2)]);
      Contour.Type.Ch=[Contour.Type.Ch;Ch];
 set(Steve.Figure,'userdata',Contour)
  
case 'Update'

    set(Steve.Text.MembersM,'String',num2str(Steve.Members));
    set(Steve.Text.AverageM,'String',sprintf('%0.2f',Steve.Vector.NewMagnitude));
    set(Steve.Text.AverageA,'String',sprintf('%0.0f',Steve.Vector.NewAngle));
    set(Steve.Text.STDM,'String',sprintf('%0.2f',Steve.Vector.MagStd));
    set(Steve.Text.MedianM,'String',sprintf('%0.2f',Steve.Vector.MagMed));
    set(Steve.Text.STDA,'String',sprintf('%0.0f',Steve.Vector.AngStd));
    set(Steve.Text.MedianA,'String',sprintf('%0.0f',Steve.Vector.AngMed));
    set(Steve.Text.LineAngle,'String',sprintf('%0.0f',Steve.LineAngle));
    if Steve.RT==1
       if Steve.Ch>length(Steve.DisplayRT)
          DisplayRT=[];
          MeanDisplayRT=[];
          MedianDisplayRT=[];
          StdDisplayRT=[];
       elseif length(find(Steve.DisplayRT))>0
          DisplayRT=Steve.DisplayRT(Steve.Ch);
          MeanDisplayRT=mean(Steve.DisplayRT(find(Steve.DisplayRT)));
          MedianDisplayRT=median(Steve.DisplayRT(find(Steve.DisplayRT)));
          StdDisplayRT=std(Steve.DisplayRT(find(Steve.DisplayRT)));
       else
          DisplayRT=Steve.DisplayRT(Steve.Ch);
          MeanDisplayRT=Steve.DisplayRT(find(Steve.DisplayRT));
          MedianDisplayRT=Steve.DisplayRT(find(Steve.DisplayRT));
          StdDisplayRT=0;

     	 end
       
       set(Steve.Text.Current,'String',sprintf('%0.2f',DisplayRT));
       set(Steve.Text.AvgRTM,'String',sprintf('%0.2f',MeanDisplayRT));
	    set(Steve.Text.MedRTM,'String',sprintf('%0.2f',MedianDisplayRT));
       set(Steve.Text.STDRTM,'String',sprintf('%0.2f',StdDisplayRT));
    end

    
case 'Change'
   set(Steve.Button.Apply,'Enable','on');  
   
   
case 'Apply'
   warning off
   i=1;
    figure(Steve.Figure)
    Dist=str2num(get(Steve.Edit.Distance,'String'));
    [xdim ydim]=size(Contour.Image);
    if Log.Head.Chans>255
       for row=1:ydim
          for col=1:xdim
             V=[Contour.Vector.X Contour.Vector.Y];
             Temp.Ch=find(V(:,1)==col &  V(:,2)==row);
             %if ~isempty(Temp.Ch)
             %Steve.Points
             %Temp.Ch
             %pause
             %end
             x=find(Steve.Points==Temp.Ch);
             if ~isempty(x)
                rows(i)=col;
                cols(i)=row;
                i=i+1;
             end
          end
       end
       %Steve.Points
       Steve.Arc=str2num(get(Steve.Edit.Angle,'String'));
       Steve.Angle=str2num(get(Steve.Text.AverageA,'String'));
       Steve.lowangle=(Steve.Angle-Steve.Arc);
       Steve.highangle=(Steve.Angle+Steve.Arc);
       for row=1:ydim
          for col=1:xdim
             Distance=sqrt((row-rows).^2+(col-cols).^2);
             h=find(Distance<=Dist);
            Steve.currentpoint=[row col];
            Temp.Ch=find(V(:,1)==row &  V(:,2)==col);
  				 if (Contour.Vector.Vx(Temp.Ch)<0 & -Contour.Vector.Vy(Temp.Ch)<0) | (Contour.Vector.Vx(Temp.Ch)>0 & -Contour.Vector.Vy(Temp.Ch)<0) 
 					      Contour.Vector.Angle=180/pi*(atan2(-Contour.Vector.Vy,Contour.Vector.Vx))+360;   
  			 	 else
 					     Contour.Vector.Angle=180/pi*(atan2(-Contour.Vector.Vy,Contour.Vector.Vx));
             end
             a=Contour.Vector.Angle(Temp.Ch);
             
            if  str2num(get(Steve.Text.AverageA,'String'))>270 & a<90 
                a=a+360;
			   elseif str2num(get(Steve.Text.AverageA,'String'))<90 & a>270
			       a=a-360;
			   end
             
             
             
             samechannels=find(x==Temp.Ch);
             hzero=find(0==Distance);
             if (a<Steve.highangle & a>Steve.lowangle)& isempty(hzero) & ~isempty(h) & isempty(samechannels)  
              Steve.currentpoint=[row col];
              Contour.Vector.Magnitude=sqrt((Contour.Vector.X-Contour.Vector.Vx).^2+(Contour.Vector.Y-Contour.Vector.Vy).^2);
              V=[Contour.Vector.X Contour.Vector.Y];
              Temp.Ch=find(V(:,1)==Steve.currentpoint(1) &  V(:,2)==Steve.currentpoint(2));
 if ~isempty(Temp.Ch)
    if (Contour.Vector.Vx(Temp.Ch)<0 & Contour.Vector.Vy(Temp.Ch)>0) | (Contour.Vector.Vx(Temp.Ch)>0 & Contour.Vector.Vy(Temp.Ch)>0) 
       Contour.Vector.Angle=180/pi*(atan2(-Contour.Vector.Vy,Contour.Vector.Vx))+360;   
    else
      Contour.Vector.Angle=180/pi*(atan2(-Contour.Vector.Vy,Contour.Vector.Vx));
   end
   if  str2num(get(Steve.Text.AverageA,'String'))>270 & Contour.Vector.Angle(Temp.Ch)<90 & ~isempty(get(Steve.Text.MedianA,'String'))
      Contour.Vector.Angle=Contour.Vector.Angle+360;
   elseif str2num(get(Steve.Text.AverageA,'String'))<90 & Contour.Vector.Angle(Temp.Ch)>270 & ~isempty(get(Steve.Text.MedianA,'String'))
      Contour.Vector.Angle=Contour.Vector.Angle-360;
   end
   
   Temp.Current=find(Contour.Type.Ch==Contour.Ch_XY(Temp.Ch,1));
              Steve.Vector.OldMagnitude=str2num(get(Steve.Text.AverageM,'String'));
              Steve.Vector.OldAngle=str2num(get(Steve.Text.AverageA,'String'));
          if  isempty(Temp.Current)
               Steve.Members=Steve.Members+1;
             if get(Contour.Check.Inverse,'Value')
                Steve.Vector.NewMags(Temp.Ch)=1/Contour.Vector.V(Temp.Ch);
             else
                Steve.Vector.NewMags(Temp.Ch)=Contour.Vector.V(Temp.Ch);
             end
	 		   Steve.Points=find(Steve.Vector.NewMags<999);
               Steve.Vector.NewMagnitude=(mean(Steve.Vector.NewMags(Steve.Points)));
			   Steve.Vector.MagMed=median(Steve.Vector.NewMags(Steve.Points));               
               Steve.Vector.MagStd=std(Steve.Vector.NewMags(Steve.Points));
			   Steve.Vector.NewAngs(Temp.Ch)=Contour.Vector.Angle(Temp.Ch);
               Steve.Vector.NewAngle=mean(Steve.Vector.NewAngs(Steve.Points));
  			   Steve.Vector.AngMed=median(Steve.Vector.NewAngs(Steve.Points));               
               Steve.Vector.AngStd=std(Steve.Vector.NewAngs(Steve.Points));
               Steve_Contour('Marker',Steve.Figure,Contour.Ch_XY(Temp.Ch,1),Steve.currentpoint);
            else
               Contour.Type.Ch(Temp.Current)=[];
               set(Steve.Figure,'userdata',Contour);
               delete(findobj(Steve.Axes,'type','patch','tag',num2str(Contour.Ch_XY(Temp.Ch,1))))
               Steve.Members=Steve.Members-1;
               if Steve.Members==0
                  Steve.Vector.NewMagnitude=0;
                  Steve.Vector.MagMed=[];
                  Steve.Vector.AngMed=[];
                  Steve.Vector.NewAngle=0;
                  Steve.Vector.MagStd=0;
                  Steve.Vector.AngStd=0;
                  Steve.DisplayRT=[];
               else
 				  Steve.Vector.NewMags(Temp.Ch)=1000;
 				  Steve.Points=find(Steve.Vector.NewMags<999);
				  Steve.Vector.NewAngs(Temp.Ch)=0;
                  Steve.Vector.NewMagnitude=(mean(Steve.Vector.NewMags(Steve.Points)));
				  Steve.Vector.MagMed=median(Steve.Vector.NewMags(Steve.Points));                 
                  Steve.Vector.MagStd=std(Steve.Vector.NewMags(Steve.Points));
				  Steve.Vector.NewAngs(Temp.Ch)=Contour.Vector.Angle(Temp.Ch);
                  Steve.Vector.NewAngle=mean(Steve.Vector.NewAngs(Steve.Points));
  				  Steve.Vector.AngMed=median(Steve.Vector.NewAngs(Steve.Points));               
                  Steve.Vector.AngStd=std(Steve.Vector.NewAngs(Steve.Points));
              end
                 if isempty(findobj(Steve.Axes,'type','patch','Marker','+','MarkerEdgeColor',[1 0 0]));
                  if ~isempty(Contour.Type.Ch)
                     set(findobj('type','patch','Marker','+','tag',num2str(Contour.Type.Ch(length(Contour.Type.Ch)))),'MarkerEdgeColor',[1 0 0])
                  end
               end

            end
            end
            Steve_Contour('Update')            
             end %end of isempty
          end %end of col
       end  %end of row       
    end % Ending of the 256 channel if
    
    
    
    
 case 'Clear'
    %close(Steve.Figure)
    %Temp.Ch=[];
      delete(findobj(Steve.Axes,'Tag','Line'));
      delete(findobj(Steve.Axes,'type','patch','tag','B'))
      delete(findobj(Steve.Axes,'type','patch','tag','A'))
      			 Steve.Vector.NewMagnitude=[];
      			 Steve.DisplayRT=[];
                 Steve.Vector.MagMed=[];
                 Steve.Vector.AngMed=[];
                 Steve.Vector.NewAngle=[];
                 Steve.Vector.MagStd=[];
                 Steve.Vector.AngStd=[];
                 Steve.Members=0;
                 Steve.LineAngle=[];
                 set(Steve.Text.MembersM,'String',0);
                 Steve.Vector.NewMags=1000*ones(1,length(Contour.Ch_XY));
					  Steve.Vector.NewAngs=1000*ones(1,length(Contour.Ch_XY));	
Steve_Contour('Clear1')
% for Count=1:256
%        delete(findobj(Steve.Axes,'type','patch','tag',num2str(Contour.Ch_XY(Count,1))))
% end
Contour.Type.Ch=[];
set(Steve.Figure,'userdata',Contour)
                  Steve_Contour('Update')
     set(Steve.Button.Finish,'Value',0);
     set(Steve.Button.Start,'Value',0);
     set(Steve.Button.Apply,'Enable','off');   

     
     
     
     
  case 'Clear1'
      
                 Steve.Vector.NewMagnitude=[];
                 Steve.Vector.MagMed=[];
                 Steve.Vector.AngMed=[];
                 Steve.Vector.NewAngle=[];
                 Steve.Vector.MagStd=[];
                 Steve.Vector.AngStd=[];
      			 Steve.DisplayRT=[];
                 Steve.Members=0;
                 set(Steve.Text.MembersM,'String',0);
                 Steve.Vector.NewMags=1000*ones(1,length(Contour.Ch_XY));
			     Steve.Vector.NewAngs=1000*ones(1,length(Contour.Ch_XY));	

for Count=1:length(Contour.Ch_XY(:,1))
          delete(findobj(Steve.Axes,'type','patch','tag',num2str(Contour.Ch_XY(Count,1))))
end
Contour.Type.Ch=[];
set(Steve.Figure,'userdata',Contour)
Steve_Contour('Update')
     
     
     
     

case 'Check1'
     set(Steve.Button.Finish,'Value',0);
case 'Check2'
       set(Steve.Button.Start,'Value',0);
      
      
case 'ClearPoints'
    whos
    for Count=1:256
       delete(findobj(Steve.Axes,'type','patch','tag',num2str(Contour.Ch_XY(Count,1))))
    end
		Contour.Type.Ch=[];
		set(Steve.Figure,'userdata',Contour)
   	Steve_Contour('Update')
    set(Steve.Button.Start,'Enable','off');   


case 'Ben'
   Autocalc_Contour('Initial')
   
case 'Save'
   if Steve.Append==0
%   [Steve.Filename Steve.Pathname]=uiputfile([Log.UD.Path '\*.ste'],'Save .ste file');
 		[Steve.Filename Log.UD.DataCD2]=uiputfile([Log.UD.DataCD2,'\',Stripchart.Head.FileName,'.ste'],'Save .ste file');
		Steve.Pathname=Log.UD.DataCD2;
if Steve.Pathname~=0   
    Steve.Append=1;
  if Steve.Filename(length(Steve.Filename))~='e' | length(Steve.Filename)<3
      Steve.Filename=strcat(Steve.Filename,'.ste');
   elseif Steve.Filename(length(Steve.Filename)-2:length(Steve.Filename))=='ste'
   end
   
   Steve.fid=fopen([Steve.Pathname Steve.Filename],'w');
   row1=['Prop_Magnitude,,,Prop_Angle,,,Members,Anat_Angle'];
   row2=['Mean,','Median,','STDV,','Mean,','Median,','STDV,'];
   fprintf(Steve.fid,'%s\n',row1);
   fprintf(Steve.fid,'%s\n',row2);
   warndlg(['All further saves will append to the file ',[Steve.Pathname Steve.Filename],' You must close this window and re-open it to make a new save file'],'ATTENTION');
end 
end
if Steve.Append==1 & ~isempty(get(Steve.Text.MedianM,'String'))
   h=msgbox(['Saving to: ',[Steve.Pathname Steve.Filename]]);
fprintf(Steve.fid,'%s,',get(Steve.Text.AverageM,'String'));
fprintf(Steve.fid,'%s,',get(Steve.Text.MedianM,'String'));
fprintf(Steve.fid,'%s,',get(Steve.Text.STDM,'String'));
fprintf(Steve.fid,'%s,',get(Steve.Text.AverageA,'String'));
fprintf(Steve.fid,'%s,',get(Steve.Text.MedianA,'String'));
fprintf(Steve.fid,'%s,',get(Steve.Text.STDA,'String'));
fprintf(Steve.fid,'%s,',get(Steve.Text.MembersM,'String'));
fprintf(Steve.fid,'%s\n',get(Steve.Text.LineAngle,'String'));
      pause(1)
      close(h)
   end   
   
case 'Export'
 		[Steve.Filename Log.UD.DataCD2]=uiputfile([Log.UD.DataCD2,'\',Stripchart.Head.FileName,'.ste'],'Save .ste file');
		Steve.Pathname=Log.UD.DataCD2;
if Steve.Pathname~=0   
  if Steve.Filename(length(Steve.Filename))~='e' | length(Steve.Filename)<3
      Steve.Filename=strcat(Steve.Filename,'.ste');
   end
end 
for count=1:length(Contour.Vector.V)
    if (Contour.Vector.Vx(count)<0 & Contour.Vector.Vy(count)>0) | (Contour.Vector.Vx(count)>0 & Contour.Vector.Vy(count)>0) 
		VectorAngle(count)=180/pi*(atan2(-Contour.Vector.Vy(count),Contour.Vector.Vx(count)))+360;   
    else
      VectorAngle(count)=180/pi*(atan2(-Contour.Vector.Vy(count),Contour.Vector.Vx(count)));
   end
end

   
bigarray=[Contour.Vector.X, Contour.Vector.Y, Contour.Vector.V, VectorAngle'];
dlmwrite([Steve.Pathname Steve.Filename],bigarray,'\t')
   
case 'Select'
 		[Steve.Filename Log.UD.DataCD2]=uiputfile([Log.UD.DataCD2,'\',Stripchart.Head.FileName,'.txt'],'Save .txt file');
		Steve.Pathname=Log.UD.DataCD2;
if Steve.Pathname~=0   
  if Steve.Filename(length(Steve.Filename))~='t' | length(Steve.Filename)<3
      Steve.Filename=strcat(Steve.Filename,'.txt');
   end
end 

Vecdata(1,:) = Steve.Points;
Vecdata(2,:) = Steve.Vector.NewMags(Steve.Points);
Vecdata(3,:) = Steve.Vector.NewAngs(Steve.Points);

dlmwrite([Steve.Pathname Steve.Filename],Vecdata,'\t')   
   
case 'DeleteFcn'
   if ~isempty(Steve.Figure)
       if ~isempty(dir('SteveContParams.mat'));
           load SteveContParams
       end
      SteveContParams=get(Steve.Figure);
      SteveContParams.FGSize=SteveContParams.Position;
      SteveContParams.Distance=str2num(get(Steve.Edit.Distance,'String'));
      SteveContParams.Angle=str2num(get(Steve.Edit.Angle,'String'));
      save SteveContParams SteveContParams
       delete(Steve.Figure);
   end
   
case 'RiseInitial'  
   if Steve.RT==0;
      FG_Size=get(Steve.Figure,'Position');
      set(Steve.Figure,'Position',[FG_Size(1)-50 FG_Size(2) FG_Size(3)+100 FG_Size(4)]);
      boxcolor=[0.92 0.92 0.92];                          
        Steve.Text.One = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',Contour.Color, ...
       			'HorizontalAlignment','center',...   	
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[390 165 110 25], ...
               'String','Rise Time (ms)', ...
               'Style','text', ...
               'Tag','Vector Type');
         Steve.Text.AverageL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[400 155 40 15], ...
               'String','Current', ...
               'Style','text', ...
               'Tag','Vector Type');
         Steve.Text.Current = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[450 155 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
         Steve.Text.AverageL = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[400 135 40 15], ...
               'String','Mean', ...
               'Style','text', ...
               'Tag','Vector Type');
         Steve.Text.AvgRTM = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[450 135 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            Steve.Text.Text = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[400 115 40 15], ...
               'String','Median', ...
               'Style','text', ...
               'Tag','Vector Type');
            Steve.Text.MedRTM = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[450 115 40 15], ...
               'String',[], ...
               'Style','text', ...
               'Tag','Vector Type');
            Steve.Text.Text = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...    
               'Units','pixel',...   
               'Position',[400 95 40 15], ...
               'String','STDV', ...
               'Style','text', ...
               'Tag','Vector Type');
            Steve.Text.STDRTM = uicontrol('Parent',Steve.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...    
               'Units','pixel',...   
               'Position',[450 95 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            Annote=Stripchart.Annote.Array;
	            Data1=Data{Stripchart.Figure};
Temp.P=findobj(Stripchart.Axes,'type','patch','LineWidth',Log.UD.Ref.ThickLine);
Temp.X=get(Temp.P,'xdata');
%a=Temp.X
Temp.X=round(Temp.X(1:2));
X1X2=Temp.X;
[xx yy]=size(Annote);
count=1;
for i=1:xx;
   label=setstr(Annote(i,3:5));
   if label== 'AT '
      ActAnnote(count,:)=Annote(i,1:2);
      count=count+1;
   end
end
[xx yy]=size(ActAnnote);
for i=1:xx-1
   Channel=ActAnnote(i,1)+1;
   DataCh=Data1(Channel,X1X2(1):X1X2(2));
   DiffDataCh=diff(DataCh);
   %ben added a lowpass filter here to try to make algorithm more reliable, 05/09/02
   %[N D]=butter(9, 0.75, 'low');
   %filtDataCh=filter(N, D, DiffDataCh);
[xdim ydim]=size(DataCh);
if i<=xx 
   x=ActAnnote(i,2)-X1X2(1)+1;
   if x>0 & Channel<Log.Head.Chans & x<=ydim;
   y1=max(DataCh);
   y2=min(DataCh);
   deltay=y1-y2;
   %AmpFact=0.05*deltay
   %normDataCh=(deltay-filtDataCh)/deltay;
   Start=fliplr(DiffDataCh(1:x));
   %Start=fliplr(normDataCh(1:x));
% FINDS THE START OF RISE TIME
   temp=find(Start>=-std(DataCh(1:15)))-1;
   %temp=find(Start>=0)-1;
   
   
   if length(DiffDataCh)>x+20
      temp2=find(DiffDataCh(x:x+20)>=-std(DiffDataCh(x:x+20)));
   else
       temp2=find(DiffDataCh(x:end)>=-std(DiffDataCh(x:end)));
   end 
 
   %temp2=find(filtDataCh(x:x+20)>=AmpFact);
   
   DataCh2=-DataCh;
 
   if ~isempty(temp) & ~isempty(temp2)
   Amplitude=max(DataCh2(x:x+temp2(1)-1))-min(DataCh2(1:x));
   DataCh2=(DataCh2-min(DataCh2(1:x)))/(Amplitude)*100;
   Start=x-temp(1);
   End=x+temp2(1)-1;
   dVdt=max(diff(DataCh2));
   
   Risetime(Channel)=End-Start;
%    Risetime(Channel)=dVdt;
   if 1==2
    figure(100)
    plot(-DataCh)
    hold
    plot(DataCh2,'r')
    a=line([x-temp(1) x-temp(1)],[y1 y2]);
    set(a,'Color',[1 0 0])
    b=line([x+temp2(1)-1 x+temp2(1)-1],[y1 y2]);
    set(b,'Color',[0 1 0])
    line([x x],[y1 y2])
    plot(5*DiffDataCh,'r')
    hold off
    pause
   end
 end
end
end

end
Steve.RiseTime=Risetime;
end
   
      Steve.RT=1;

case 'ResizeFcn'
   FG_Size=get(Steve.Figure,'position');
   if FG_Size(3)>71 & FG_Size(4)>181
      set(Steve.Axes,'position',[5 195 FG_Size(3)-10 FG_Size(4)-200])
   end
   
   
      
end

save stevedata Contour Steve