function [varargout]=Autocalc_Contour(varargin)
action = varargin{1};
global Log Contour Autocalc Stripchart
switch action
%================================================================
case 'Initial'
   Autocalc.Applied=0;
   %FG_Size=[1 35 Log.UD.HD.LUTDisplay.FG_Limit];
   Contour=get(gcbf,'userdata');
   Stripchart=get(Contour.Parent,'userdata');
            FG_Size=[830 130 300 300];
            Autocalc.Figure=figure;
            Autocalc.Parent=Autocalc.Figure;
            set(Autocalc.Figure,'Units','pixels', ...
               'Color',Contour.Color,...%     'HandleVisibility','off',...
               'DeleteFcn','Zeng_Contour(''DeleteFcn'');',...
               'menu','none',...
               'Name',[Stripchart.Head.FileName ':Auto Vector Calc'],...
               'NumberTitle','off',...
               'unit','pixel',...     
               'PaperPositionMode','auto',...If you make it auto, pagedlg won't work
               'Position',FG_Size, ...
               'selected','on',...
               'Tag','Contour',...
               'visible','off');
            %Contour.AxesSz=[5 180 FG_Size(3)-10 FG_Size(4)-200];
            Contour.Xlim=[min(Contour.Ch_XY(:,2))-.5 max(Contour.Ch_XY(:,2))+.5];
            Contour.Ylim=[min(Contour.Ch_XY(:,3))-.5 max(Contour.Ch_XY(:,3))+.5];
            Contour.YDir=-1;   
            %set(Contour.Axes,'xlim',[min(Contour.Ch_XY(:,2))-.5 max(Contour.Ch_XY(:,2))+.5],'ylim',[min(Contour.Ch_XY(:,3))-.5 max(Contour.Ch_XY(:,3))+.5]);
            
            %Main-----------------------------
            Autocalc.Text.Tmin = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'ListboxTop',0, ...           
               'Units','pixel',...   
               'Position',[10 260 65 15], ...
               'String','Arc Size', ...
               'Style','text', ...
               'Tag','Time Type');
                           
            Autocalc.Text.Tmax = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'ListboxTop',0, ...          
               'Units','pixel',...   
               'Position',[10 235 65 15], ...
               'String','Primary Angle', ...
               'Style','text', ...
               'Tag','Time Type');
            
            Autocalc.Edit.Angle = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',[1 1 1], ...
               'enable','on',...
               'ListboxTop',0, ...         
               'Units','pixel',...   
               'Position',[80 235 40 20], ...
               'string',0,...
               'Style','edit', ...
               'Tag','Time Type',...
               'callback','Autocalc_Contour(''Change'')');
                           
            Autocalc.Edit.Arc = uicontrol('Parent',Autocalc.Figure, ...      
               'Units','pixel',...   
               'enable','on',...
               'BackgroundColor',[1 1 1], ...
               'ListboxTop',0, ...
               'Position',[80 260 40 20], ...
               'string',15,...
               'Style','edit', ...
               'Tag','Time Type',...
               'callback','Autocalc_Contour(''Change'')');
           %
           Autocalc.Text.Stepangle = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'ListboxTop',0, ...          
               'Units','pixel',...   
               'Position',[150 245 65 15], ...
               'String','Step Angle', ...
               'Style','text', ...
               'Tag','Time Type');
            %
            Autocalc.Edit.Stepangle = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',[1 1 1], ...
               'enable','on',...
               'ListboxTop',0, ...         
               'Units','pixel',...   
               'Position',[220 245 40 20], ...
               'string',0,...
               'Style','edit', ...
               'Tag','Time Type',...
               'callback','Autocalc_Contour(''Change'')');
                           
 boxcolor=[0.92 0.92 0.92];                          

            %-----------------------------
            %Vector
         Autocalc.Text.AverageL = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',Contour.Color, ...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[130 140 50 15], ...
               'String','Members', ...
               'Style','text', ...
               'Tag','Vector Type');
           Autocalc.Text.MembersM = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[135 120 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
       Autocalc.Text.AverageL = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',Contour.Color, ...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[10 200 50 15], ...
               'String','Magnitude', ...
               'Style','text', ...
               'Tag','Vector Type');
         Autocalc.Text.AverageL = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[10 180 40 15], ...
               'String','Mean', ...
               'Style','text', ...
               'Tag','Vector Type');
         Autocalc.Text.AverageM = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[60 180 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            Autocalc.Text.MedianL = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[10 160 40 15], ...
               'String','Median', ...
               'Style','text', ...
               'Tag','Vector Type');
            Autocalc.Text.MedianM = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[60 160 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            Autocalc.Text.STDL = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...    
               'Units','pixel',...   
               'Position',[10 140 40 15], ...
               'String','STDV', ...
               'Style','text', ...
               'Tag','Vector Type');
            Autocalc.Text.STDM = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...    
               'Units','pixel',...   
               'Position',[60 140 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            
            
        Autocalc.Text.AverageL = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',Contour.Color, ...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[10 110 50 15], ...
               'String','Angle', ...
               'Style','text', ...
               'Tag','Vector Type');
         Autocalc.Text.AverageL = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[10 90 40 15], ...
               'String','Mean', ...
               'Style','text', ...
               'Tag','Vector Type');
         Autocalc.Text.AverageA = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[60 90 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            Autocalc.Text.MedianL = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[10 70 40 15], ...
               'String','Median', ...
               'Style','text', ...
               'Tag','Vector Type');
            Autocalc.Text.MedianA = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...       
               'Units','pixel',...   
               'Position',[60 70 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
        Autocalc.Text.STDL = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'HorizontalAlignment','left',...
               'ListboxTop',0, ...    
               'Units','pixel',...   
               'Position',[10 50 40 15], ...
               'String','STDV', ...
               'Style','text', ...
               'Tag','Vector Type');
        Autocalc.Text.STDA = uicontrol('Parent',Autocalc.Figure, ...
               'BackgroundColor',boxcolor, ...
               'enable','on',...
               'ListboxTop',0, ...    
               'Units','pixel',...   
               'Position',[60 50 40 15], ...
               'String',0, ...
               'Style','text', ...
               'Tag','Vector Type');
            

            
         Autocalc.Button.Apply = uicontrol('Parent',Autocalc.Figure,...
               'ListboxTop',0, ...    
               'enable','on',...
               'Units','pixel',...   
               'Position',[10 10 60 20], ...
               'String','Apply', ...
               'tag','Button Apply',...
               'callback','Autocalc_Contour(''Apply'')');
         Autocalc.Button.Graph = uicontrol('Parent',Autocalc.Figure,...
               'ListboxTop',0, ...    
               'enable','on',...
               'Units','pixel',...   
               'Position',[100 10 70 20], ...
               'String','All Angles', ...
               'tag','Button Apply',...
               'callback','Autocalc_Contour(''All Angles'')');
 
            
                        
            
            
            
            set(Autocalc.Figure,'userdata',Contour);
            set(Autocalc.Figure,'visible','on');
            Zeng_Contour('Setting','ClrMap','Jet');
            set(Autocalc.Figure,'ResizeFcn','Zeng_Contour(''ResizeFcn'')');
            %-------------------------
            %To plot image
            
case 'Change'
   set(Autocalc.Button.Apply,'Enable','on');  
   
   
case 'Apply'
   warning off
    figure(Contour.Figure)

   if Autocalc.Applied==0;
      Autocalc.Applied=1;
      point=0;
      count=1;
      Autocalc.Member.Distance=0*ones(1,length(Contour.Vector.Y));
      Autocalc.Member.Angle=0*ones(1,length(Contour.Vector.Y));
   Contour.Base.Distance=sqrt(Contour.Vector.Y.^2+Contour.Vector.X.^2);
   Contour.Base.Angle=atan2(Contour.Vector.Y,Contour.Vector.X);
   Contour.Vector.Magnitude=sqrt((Contour.Vector.X-Contour.Vector.Vx).^2+(Contour.Vector.Y-Contour.Vector.Vy).^2);
   Contour.Vector.Angle=(atan2(-Contour.Vector.Vy,Contour.Vector.Vx));
   
   Autocalc.arc=str2num(get(Autocalc.Edit.Arc,'String'))/2;
   Autocalc.angle=str2num(get(Autocalc.Edit.Angle,'String'));
   Autocalc.lowangle=(Autocalc.angle-Autocalc.arc)*pi/180;
   Autocalc.highangle=(Autocalc.angle+Autocalc.arc)*pi/180;
   
   
   V=[Contour.Vector.X Contour.Vector.Y];
   for index=1:length(Contour.Vector.Y)
     if Contour.Vector.Angle(index)<0
        Contour.Vector.Angle(index)=2*pi+Contour.Vector.Angle(index);
     end
     a=Contour.Vector.Angle(index);      
     b=Autocalc.lowangle;
     c=Autocalc.highangle;
      if c>(2*pi)  &  a<=(c-2*pi) & a>=(b-2*pi);
            Temp.currentpoint=[Contour.Vector.X(index) Contour.Vector.Y(index)];
            Temp.Ch=find(V(:,1)==Temp.currentpoint(1) &  V(:,2)==Temp.currentpoint(2));
            Autocalc_Contour('Zeng',Temp)
            point=1;
      elseif  c>(2*pi)  &  (a<=c & a>=b);
            Temp.currentpoint=[Contour.Vector.X(index) Contour.Vector.Y(index)];
            Temp.Ch=find(V(:,1)==Temp.currentpoint(1) &  V(:,2)==Temp.currentpoint(2));
            Autocalc_Contour('Zeng',Temp)
            point=1;
	   elseif b<0 & a<=(c+2*pi) & a>=(b+2*pi) ;
            Temp.currentpoint=[Contour.Vector.X(index) Contour.Vector.Y(index)];
            Temp.Ch=find(V(:,1)==Temp.currentpoint(1) &  V(:,2)==Temp.currentpoint(2));
            Autocalc_Contour('Zeng',Temp)
            point=1;
      elseif (a>=b & a<=c) 
            Temp.currentpoint=[Contour.Vector.X(index) Contour.Vector.Y(index)];
            Temp.Ch=find(V(:,1)==Temp.currentpoint(1) &  V(:,2)==Temp.currentpoint(2));
            Autocalc_Contour('Zeng',Temp)
            point=1;
      end
      if point==1
         Autocalc.Member.Distance(index)=Contour.Base.Distance(index);
         Autocalc.Member.Angle(index)=Contour.Base.Angle(index);
         count=count+1;
      	 point=0;
      end
         
   end
   set(Autocalc.Text.MembersM,'String',num2str(count));
   count1=count;
   I=find(Autocalc.Member.Distance~=0);
   Autocalc.Member.Distance2=Autocalc.Member.Distance(I);
   I=find(Autocalc.Member.Angle~=0);
   Autocalc.Member.Angle2=Autocalc.Member.Angle(I);
       %set(Autocalc.Button.Apply,'Enable','off');  
    Autocalc.MeanM=mean(Autocalc.Member.Distance2);
    Autocalc.STDM=std(Autocalc.Member.Distance2);
    Autocalc.MedianM=median(Autocalc.Member.Distance2);
    Autocalc.MeanA=mean(Autocalc.Member.Angle2);
    Autocalc.STDA=std(Autocalc.Member.Angle2);
    Autocalc.MedianA=median(Autocalc.Member.Angle2);
    b=(Autocalc.MeanM+1.3*Autocalc.STDM);
    c=(Autocalc.MeanM-1.3*Autocalc.STDM);
    e=Autocalc.MeanA+1*Autocalc.STDA;
    f=Autocalc.MeanA-1*Autocalc.STDA;
    
    
    for index=1:length(Contour.Vector.Y)
       
       
    % if index<=count1
     a=Autocalc.Member.Distance(index);
     d=Autocalc.Member.Angle(index);
     if (a>b | a<c | d>e | d<f) & Autocalc.Member.Distance(index)>0;
            Temp.currentpoint=[Contour.Vector.X(index) Contour.Vector.Y(index)];
            Temp.Ch=find(V(:,1)==Temp.currentpoint(1) &  V(:,2)==Temp.currentpoint(2));
            figure(Contour.Figure)
            delete(findobj(Contour.Axes,'type','patch','tag',num2str(Contour.Ch_XY(Temp.Ch,1))))
				count=count-1;
            Autocalc.Member.Distance(index)=1000;
            Autocalc.Member.Angle(index)=1000;
         end
   %   end   
     
    end
    
       I=find(Autocalc.Member.Distance<999 & Autocalc.Member.Distance>0);
       Autocalc.Member.Distance2=Autocalc.Member.Distance(I);
   Autocalc.Member.Magnitude=Contour.Vector.V(I);
   Autocalc.Member.Theta=Contour.Vector.Angle(I)*180/pi;
    I=find(Autocalc.Member.Angle<999 & Autocalc.Member.Distance>0);
    Autocalc.Member.Angle2=180/pi*Autocalc.Member.Angle(I);
       %set(Autocalc.Button.Apply,'Enable','off');  
    %Autocalc.MeanM=mean(Autocalc.Member.Distance2);
    %Autocalc.STDM=std(Autocalc.Member.Distance2);
    %Autocalc.MedianM=median(Autocalc.Member.Distance2);
    %Autocalc.MeanA=mean(Autocalc.Member.Angle2);
    %Autocalc.STDA=std(Autocalc.Member.Angle2);
    %Autocalc.MedianA=median(Autocalc.Member.Angle2);
   
       
    set(Autocalc.Text.MembersM,'String',num2str(count-1));
    set(Autocalc.Text.AverageM,'String',sprintf('%0.1f',(mean(Autocalc.Member.Magnitude))));
    set(Autocalc.Text.STDM,'String',sprintf('%0.1f',(std(Autocalc.Member.Magnitude))));
    set(Autocalc.Text.MedianM,'String',sprintf('%0.1f',(median(Autocalc.Member.Magnitude))));
    set(Autocalc.Text.AverageA,'String',sprintf('%0.1f',(mean(Autocalc.Member.Theta))));
    set(Autocalc.Text.STDA,'String',sprintf('%0.1f',(std(Autocalc.Member.Theta))));
    set(Autocalc.Text.MedianA,'String',sprintf('%0.1f',(median(Autocalc.Member.Theta))));
    
 else  
       V=[Contour.Vector.X Contour.Vector.Y];
    for index=1:length(Contour.Vector.Y)
            Temp.currentpoint=[Contour.Vector.X(index) Contour.Vector.Y(index)];
            Temp.Ch=find(V(:,1)==Temp.currentpoint(1) &  V(:,2)==Temp.currentpoint(2));
            figure(Contour.Figure)
            delete(findobj(Contour.Axes,'type','patch','tag',num2str(Contour.Ch_XY(Temp.Ch,1))))
       end
       Autocalc.Applied=0;
       Autocalc_Contour('Apply');
end      
  
   
 
   
case 'All Angles'
   counter=1;
   stepsize = str2num(get(Autocalc.Edit.Stepangle, 'String'));
   if stepsize == 0
       stepsize = 20;
       set(Autocalc.Edit.Stepangle,'String',stepsize);
   end
   for angle=0:stepsize:360
      set(Autocalc.Edit.Angle,'String',angle);
      Autocalc_Contour('Apply');
      meanmag(counter)=mean(Autocalc.Member.Magnitude);
      if meanmag(counter)>10000
         meanmag(counter)=0;
      end
      %pause(1)
      counter=counter+1;
   end
   Autocalc.Figure2=figure;
   figure(Autocalc.Figure2)
   set(gcf,'Position', [100 100 1500 800])
   oldstepsize = pi/180*[0:stepsize:360];
   newstepsize = pi/180*[0:(stepsize/100):360];
   newmeanmag = interp1(oldstepsize, meanmag, newstepsize, 'spline');
   %nlinfit
   polar(newstepsize, newmeanmag, 'r')
   hold on;
   polar(pi/180*[0:stepsize:360],meanmag)
   save junk meanmag
   h=([0:stepsize:360])';
   meanmag=meanmag';
   new(:,1)=h;
   new(:,2)=meanmag;
   save junk new
   gtext({num2str(new)})
   %interpolated min/max display
   stepsize100 = stepsize/100;
   newpp = [0:stepsize100:360; newmeanmag]';
   newmaxpp = max(newpp);
   newminpp = min(newpp);
   newmax2 = newmaxpp(1,2);
   newmin2 = newminpp(1,2);
   newlengthpp = length(newpp);
   for newcountpp = 1:1:newlengthpp
       if (newpp(newcountpp,2) == newmax2)
           newmax2angle = newpp(newcountpp,1);
       end
   end
   for newcountpp = 1:1:newlengthpp
       if (newpp(newcountpp,2) == newmin2)
           newmin2angle = newpp(newcountpp,1);
       end
   end
   
   pp=[0:stepsize:360;meanmag']'
   maxpp = max(pp);
   minpp = min(pp);
   max2 = maxpp(1,2);
   min2 = minpp(1,2);
   lengthpp = length(pp);
   for countpp = 1:1:lengthpp
       if (pp(countpp,2) == max2)
           max2angle = pp(countpp,1);
       end
   end
   for countpp = 1:1:lengthpp
       if (pp(countpp,2) == min2)
           min2angle = pp(countpp,1);
       end
   end
   gtext({'max', num2str(max2angle), num2str(max2), 'min', num2str(min2angle), num2str(min2), ' ', 'Iterpolated max', num2str(newmax2angle), num2str(newmax2), 'Interpolated min', num2str(newmin2angle), num2str(newmin2)})
   
   
       

   
case 'Zeng'   
   Temp=varargin{2};
   Zeng_Contour('Marker',Contour.Figure,Contour.Ch_XY(Temp.Ch,1),Temp.currentpoint);
   %Zeng_Contour('Vector Label',Contour.Figure)
   end
   
   
