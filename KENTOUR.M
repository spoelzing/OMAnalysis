function [varargout]=Kentour(varargin)

global A Ymax Xmax Tmin Tmax Contour

if nargin<1,
   action = 'Init';
else
   action = varargin{1};
end;

switch action

case 'Init'
   Contour.Figure=figure;
            
            set(Contour.Figure,'Units','pixels', ...
               'Name','Kentour',...
            	'menu','none',...
               'NumberTitle','off',...
               'unit','pixel',...     
               'PaperPositionMode','auto',...If you make it auto, pagedlg won't work
               'selected','on',...
               'Tag','Contour',...
               'visible','on');
            
            Contour.Text.Tmin = uicontrol('Parent',Contour.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'ListboxTop',0, ...           
               'Units','pixel',...   
               'HorizontalAlignment','right',...
               'Position',[10 200 70 20], ...
               'String','Tmin= ', ...
               'Style','text', ...
               'Tag','Time Type');
                           
            Contour.Text.Tmax = uicontrol('Parent',Contour.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'ListboxTop',0, ...          
               'Units','pixel',...   
               'HorizontalAlignment','right',...
               'Position',[10 250 70 20], ...
               'String','Tmax= ', ...
               'Style','text', ...
               'Tag','Time Type');

            Contour.Text.Ctop = uicontrol('Parent',Contour.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'ListboxTop',0, ...           
               'Units','pixel',...   
               'HorizontalAlignment','right',...
               'Position',[10 99 50 20], ...
               'String','Max Color', ...
               'Style','text', ...
               'Tag','Time Type');
                           
            Contour.Text.Cbottom = uicontrol('Parent',Contour.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'ListboxTop',0, ...          
               'Units','pixel',...   
               'HorizontalAlignment','right',...
               'Position',[10 76 50 20], ...
               'String','Min Color', ...
               'Style','text', ...
               'Tag','Time Type');
            Contour.Text.Interval = uicontrol('Parent',Contour.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'ListboxTop',0, ...              
               'Units','pixel',...   
               'HorizontalAlignment','right',...
               'Position',[20 53 40 20], ...
               'String','Interval', ...
               'Style','text', ...
               'Tag','Contour Type');
            
            Contour.Edit.Ctop = uicontrol('Parent',Contour.Figure, ...
               'BackgroundColor',[1 1 1], ...
               'enable','on',...
               'ListboxTop',0, ...         
               'Units','pixel',...   
               'Position',[65 99 40 20], ...
               'Style','edit', ...
               'Tag','Time Type',...
               'callback','Kentour(''Apply'')');
                           
            Contour.Edit.Cbottom = uicontrol('Parent',Contour.Figure, ...      
               'Units','pixel',...   
               'enable','on',...
               'BackgroundColor',[1 1 1], ...
               'ListboxTop',0, ...
               'Position',[65 76 40 20], ...
               'Style','edit', ...
               'Tag','Time Type',...
               'callback','Kentour(''Apply'')');
                           
            Contour.Edit.Interval = uicontrol('Parent',Contour.Figure, ...   
               'Units','pixel',...   
               'BackgroundColor',[1 1 1], ...
               'enable','on',...
               'ListboxTop',0, ...
               'Position',[65 53 40 20], ...
               'string','10',...
               'Style','edit', ...
               'Tag','Contour Type',...
               'callback','Kentour(''Apply'')');
                            
            Contour.Text.Interp = uicontrol('Parent',Contour.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'ListboxTop',0, ...              
               'Units','pixel',...   
               'Position',[150 99 40 20], ...
               'String','Interp', ...
               'Style','text', ...
               'Tag','Time Type');
           Contour.Pop.Interp = uicontrol('Parent',Contour.Figure, ...
				   'Units','pixel', ...
				   'BackgroundColor',[1 1 1],...
               'enable','on',...
				   'HorizontalAlignment','right',...
				   'ListboxTop',0, ...
					'Position',[200 99 40 20], ...
					'String','0|1|3|5', ...
					'Style','popupmenu', ...
               'Tag','Time Type',...
               'Value',1,...
               'callback','Kentour(''Apply'')');
            
            Contour.Text.Method = uicontrol('Parent',Contour.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'ListboxTop',0, ...              
               'Units','pixel',...   
               'Position',[255 99 40 20], ...
               'String','Method', ...
               'Style','text', ...
               'Tag','Time Type');
            Contour.Pop.Method = uicontrol('Parent',Contour.Figure, ...
				   'Units','pixel', ...
				   'BackgroundColor',[1 1 1],...
               'enable','on',...
				   'HorizontalAlignment','right',...
				   'ListboxTop',0, ...
					'Position',[300 99 70 20], ...
					'String','cubic|v4|linear|nearest', ...
					'Style','popupmenu', ...
               'Tag','Time Type',...
               'Value',1,...
               'callback','Kentour(''Apply'')');
            
             Contour.Check.Label = uicontrol('Parent',Contour.Figure, ...
               'BackgroundColor',[0.8 0.8 0.8], ...
               'enable','on',...
               'ListboxTop',0, ...              
               'Units','pixel',...   
               'Position',[430 99 70 20], ...
               'String','Label', ...
               'Style','checkbox', ...
               'Tag','Time Type',...
               'callback','Kentour(''Apply'')');
           
            
            Temp.File={
               'File'                            ' '                               'filemenu'
               '>Open...'                        'Kentour(''OpenXYT'')'     ' '
               '>Print...'                       'print -noui'                     ' '
               '>Print Setup.. '                 'print -dsetup'                   ' '  
				   '>------'                         ' '                               ' '
               '>Export'                         ' '                               ' '
               '>>Illustrator'                   'Kentour(''Export'',''ai'')'   '-dill'
               '>>JPG'                           'Kentour(''Export'',''jpg'')'  '-djpeg100 -noui'
               '>>Pict'                          'Kentour(''Export'',''pic'')'  '-dpict'
            	'>------'                         ' '                               ' '
               '>Exit'                           ' Close(gcbf)'                    ' '};
            


				  

            Temp=makemenu(Contour.Figure,char(Temp.File(:,1)),char(Temp.File(:,2)), char(Temp.File(:,3)));
            
			
case 'OpenXYT'
tdir=dir('lastdir.*');         
   if isempty(tdir)
      [Filename Path]=uigetfile('*.xyt');		% get file
   else
      load lastdir
   	[Filename Path]=uigetfile([lastdir,'\*.xyt']);		% get file
   end
   lastdir=Path;
   save lastdir lastdir
   if max([Filename Path]) ~= 0%if you do not click cancel
      	A=dlmread([Path Filename],'\t');
         Xmax=min(max(A(:,1)));
   		Ymax=max(max(A(:,2)));
         Tmin=min(min(A(:,3)));
   		Tmax=max(max(A(:,3)));
   		set(Contour.Text.Tmax,'string',strcat('Tmax =', num2str(round(Tmax))));
   		set(Contour.Text.Tmin,'string',strcat('Tmin =', num2str(round(Tmin))));
	    	set(Contour.Edit.Ctop,'string',num2str(round(Tmax)));
   		set(Contour.Edit.Cbottom,'string',num2str(round(Tmin)));
      	Kentour('Apply');
	end

   
case 'Apply'
   %  MATLAB M-file to plot a contour map from an XYZ annotation file
   %  (XYZ annotation file is an output of the an2xyz UNIX program)
   
   
   %  
   
   %   To fource a range, use "caxis([Min,Max])" then "colormap"
   
   % Enter the spacing between contour levels here
	interval=round(str2num(get(Contour.Edit.Interval,'string')));
   % Enter the number of interpolation nodes between pixels
   % 0 - no nodes between pixels
	Choice=get(Contour.Pop.Interp,'value');
   nodes=get(Contour.Pop.Interp,'string');
	nodes=1+str2num(nodes(Choice,:));
   % Enter the interpolation method here
   %'v4' = with corners, 'cubic'= no corners
   %'nearest' = good for reentry
   % Enter color map to use (gray,hsv,bone)
   Color='hsv';
   
   Color=[(1:-1/64:0)' (1:-1/64:0)' (1:-1/64:0)'];
   
   % Don't change anything after this
   
   interval=round(str2num(get(Contour.Edit.Interval,'string')));
    
   Choice=get(Contour.Pop.Method,'value');
   temp=get(Contour.Pop.Method,'string');
	Method=deblank(temp(Choice,:));   
   [x1,y1]=meshgrid(0:1/nodes:Xmax,0:1/nodes:Ymax);
   z1=griddata(A(:,1),A(:,2),A(:,3),x1,y1,Method);
	Min=min(min(z1));
	Max=max(max(z1));
   v=(Min:interval:Max);
   
   subplot('position',[.2 .4 .55 .55]);
   [c,h] = contourf(z1,v);
   set(gca,'YDir','reverse');
	if get(Contour.Check.Label,'value')
      clabel(c,h,'fontsize',7,'color','k','rotation',0);
   end
   colormap(Color);
   caxis([str2num(get(Contour.Edit.Cbottom,'string')) str2num(get(Contour.Edit.Ctop,'string'))]);
	axis off;
   colorbar;
   
case 'Export'
   [Filename Path]=uiputfile(['*.' varargin{2}],'Select a file for your waveform');
   if ~strcmp('0',num2str(Filename)) & ~strcmp('0',num2str(Path));
      eval(['print ' get(gcbo,'tag') ' ' Path Filename])
   end
   
end		% switch		

