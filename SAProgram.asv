% This is the Signal Averaging Algorythm developed by Steven Poelzing
% This program, given the pacing channel, or a manual channel and the pacing rate
% will determine average signals by lining them all up with the pacing artifact or designated
% manual time and pacing rate.
function [varargout]=SAProgram(varargin)
action = varargin{1};
global Data
global Fig
global Log
global Stripchart
switch action
case 'Initial'
load PDefaults
Fig=[];
Fig.Annote=varargin{13};
Fig.avgarray=[];   
Log.Steve.Figure=figure;
contin=0;
	   FG_Size(3:4)=[600 500];
   	FG_Size(1:2)=[Log.UD.ScreenSize(1)-FG_Size(3)*1.7 Log.UD.ScreenSize(2)-FG_Size(4)*1.1-40 ];
	   set(Log.Steve.Figure,...
         'Color',[0.8 0.8 0.8], ...
         'Menu','none',...
         'Name','Signal Averaging Parameter Collection Window',...
         'NumberTitle','off',...
         'Position',FG_Size, ...
         'Tag','Log');
Fig.Frame1 = uicontrol('Parent',Log.Steve.Figure, ...
	'Units','pixels', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[10 (FG_Size(3)-345) (FG_Size(3)-10) (FG_Size(4)-255)], ...
	'Style','frame', ...
   'Tag','Frame1');
ExplanationSize=[20 (FG_Size(4)-30) FG_Size(3)-120 20];
Explanation = uicontrol('Parent',Log.Steve.Figure, ...
         'BackgroundColor',[0.8 .8 .8],...
         'FontName','Arial',...
			'FontUnits','points',...
         'FontSize',14,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'HorizontalAlignment','Left',...
         'Units','pixels',...
         'Position',ExplanationSize, ...
         'String','Peak Detection Parameters',...
         'style','text');


   

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PARAMETER 1      
    ExplanationSize=[90 (FG_Size(4)-72) FG_Size(3)-120 20];
    Explanation = uicontrol('Parent',Log.Steve.Figure, ...
         'BackgroundColor',[0.8 .8 .8],...
         'FontName','Arial',...
			'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'HorizontalAlignment','Left',...
         'Units','pixels',...
         'Position',ExplanationSize, ...
         'String',varargin{2},...
         'style','text');

Fig.Parameter1Size=[20 (FG_Size(4)-70) 60 22];  
Fig.Parameter1 = uicontrol('Parent',Log.Steve.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
	'ListboxTop',0, ...
	'Position',Fig.Parameter1Size, ...
	'String',varargin{10}(1,:), ...
   'Style','edit', ...
   'Tag','EditText1');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PARAMETER 2      
    ExplanationSize=[90 (FG_Size(4)-112) FG_Size(3)-120 20];
    Explanation = uicontrol('Parent',Log.Steve.Figure, ...
         'BackgroundColor',[0.8 .8 .8],...
         'FontName','Arial',...
			'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'HorizontalAlignment','Left',...
         'Units','pixels',...
         'Position',ExplanationSize, ...
         'String',varargin{3},...
         'style','text');
     
Fig.Parameter2Size=[20 (FG_Size(4)-110) 60 22];
Fig.Parameter2 = uicontrol('Parent',Log.Steve.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
	'ListboxTop',0, ...
	'Position',Fig.Parameter2Size, ...
	'String',varargin{10}(2,:), ...
   'Style','edit', ...
   'Tag','EditText1');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PARAMETER 3      
    ExplanationSize=[90 (FG_Size(4)-152) FG_Size(3)-120 20];
    Explanation = uicontrol('Parent',Log.Steve.Figure, ...
         'BackgroundColor',[0.8 .8 .8],...
         'FontName','Arial',...
			'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'HorizontalAlignment','Left',...
         'Units','pixels',...
         'Position',ExplanationSize, ...
         'String',varargin{4},...
         'style','text');
      
Fig.Parameter3Size=[20 (FG_Size(4)-150) 60 22];
Fig.Parameter3 = uicontrol('Parent',Log.Steve.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
	'ListboxTop',0, ...
	'Position',Fig.Parameter3Size, ...
	'String',varargin{10}(3,:), ...
   'Style','edit', ...
   'Tag','EditText1');
    
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PARAMETER 4      
    ExplanationSize=[90 (FG_Size(4)-192) FG_Size(3)-120 20];
    Explanation = uicontrol('Parent',Log.Steve.Figure, ...
         'BackgroundColor',[0.8 .8 .8],...
         'FontName','Arial',...
			'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'HorizontalAlignment','Left',...
         'Units','pixels',...
         'Position',ExplanationSize, ...
         'String',varargin{5},...
         'style','text');
      
Fig.Parameter4Size=[20 (FG_Size(4)-190) 60 22];
Fig.Parameter4 = uicontrol('Parent',Log.Steve.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
	'ListboxTop',0, ...
	'Position',Fig.Parameter4Size, ...
	'String',varargin{10}(4,:), ...
   'Style','edit', ...
   'Tag','EditText1');
      
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PARAMETER 5 
Fig.Frame1 = uicontrol('Parent',Log.Steve.Figure, ...
	'Units','pixels', ...
	'BackgroundColor',[0.8 0.8 0.8], ...
	'ListboxTop',0, ...
	'Position',[10 (FG_Size(3)-500) (FG_Size(3)-10) (FG_Size(4)-300)], ...
	'Style','frame', ...
   'Tag','Frame1');

    ExplanationSize=[20 (FG_Size(4)-230) FG_Size(3)-120 25];
    Explanation = uicontrol('Parent',Log.Steve.Figure, ...
         'BackgroundColor',[0.8 .8 .8],...
         'FontName','Arial',...
			'FontUnits','points',...
         'FontSize',14,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'HorizontalAlignment','Left',...
         'Units','pixels',...
         'Position',ExplanationSize, ...
         'String','Averaging Parameters',...
         'style','text');
    ExplanationSize=[90 (FG_Size(4)-262) FG_Size(3)-120 22];
    Explanation = uicontrol('Parent',Log.Steve.Figure, ...
         'BackgroundColor',[0.8 .8 .8],...
         'FontName','Arial',...
			'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'HorizontalAlignment','Left',...
         'Units','pixels',...
         'Position',ExplanationSize, ...
         'String',varargin{6},...
         'style','text');
      
Fig.Parameter5Size=[20 (FG_Size(4)-260) 60 22];
Fig.Parameter5 = uicontrol('Parent',Log.Steve.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
	'ListboxTop',0, ...
	'Position',Fig.Parameter5Size, ...
   'Style','edit', ...
	'String',varargin{10}(5,:), ...
   'Tag','EditText1');


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PARAMETER 6
    ExplanationSize=[90 (FG_Size(4)-300) FG_Size(3)-120 20];
    Explanation = uicontrol('Parent',Log.Steve.Figure, ...
         'BackgroundColor',[0.8 .8 .8],...
         'FontName','Arial',...
			'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'HorizontalAlignment','Left',...
         'Units','pixels',...
         'Position',ExplanationSize, ...
         'String',varargin{7},...
         'style','text');
      
Fig.Parameter6Size=[20 (FG_Size(4)-300) 60 22];
Fig.Parameter6 = uicontrol('Parent',Log.Steve.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
	'ListboxTop',0, ...
	'Position',Fig.Parameter6Size, ...
   'Style','edit', ...
   'String',varargin{10}(6,:), ...
   'Tag','EditText1');


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PARAMETER 7      
    ExplanationSize=[90 (FG_Size(4)-270) FG_Size(3)-120 20];
    Explanation = uicontrol('Parent',Log.Steve.Figure, ...
         'BackgroundColor',[0.8 .8 .8],...
         'FontName','Arial',...
         'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'HorizontalAlignment','Left',...
         'Units','pixels',...
         'Position',ExplanationSize, ...
         'String',varargin{8},...
         'style','text');
      
Fig.Parameter7Size=[20 (FG_Size(4)-270) 60 22];
Fig.Parameter7 = uicontrol('Parent',Log.Steve.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
	'ListboxTop',0, ...
	'Position',Fig.Parameter7Size, ...
   'Style','edit', ...
   'String',varargin{10}(7,:), ...
   'visible','off',...
   'Tag','EditText1');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% PARAMETER 8      
    ExplanationSize=[295 (FG_Size(4)-330) FG_Size(3)-120 20];
    Fig.Explanation1 = uicontrol('Parent',Log.Steve.Figure, ...
         'BackgroundColor',[0.8 .8 .8],...
         'FontName','Arial',...
         'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'HorizontalAlignment','Left',...
         'Units','pixels',...
         'Position',ExplanationSize, ...
         'String',varargin{9},...
         'style','text');
      
Fig.Parameter8Size=[230 (FG_Size(4)-330) 60 22];
Fig.Parameter8 = uicontrol('Parent',Log.Steve.Figure, ...
   'Units','pixels', ...
   'BackgroundColor',[1 1 1], ...
   'ListboxTop',0, ...
	'Position',Fig.Parameter8Size, ...
   'Style','edit', ...
   'String',varargin{10}(8,:), ...
   'Tag','EditText1');

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%   END OF PARAMETER SPECIFICATIONS    %%%%%%%


Fig.continSize=[FG_Size(3)/5-60/2 10 60 22];
Fig.contin = uicontrol('Parent',Log.Steve.Figure, ...
	'Units','pixels', ...
   'Callback','SAProgram Run',...
   'BackgroundColor',[0.752941176470588 0.752941176470588 0.752941176470588], ...
   'ListboxTop',0, ...
	'Position',Fig.continSize, ...
	'String','Run', ...
   'Style','Pushbutton', ...
   'Value',0,...
   'Tag','Pushbutton1');

Fig.CancelSize=[FG_Size(3)*2/4-60/2 10 60 22];
Fig.Cancel = uicontrol('Parent',Log.Steve.Figure, ...
     'Units','pixels',...
     'Callback','SAProgram Cancel',...
     'FontName','Arial',...
     'FontUnits','points',...
     'FontSize',Log.UD.Ref.FontSize,...
     'FontWeight','normal',...
     'FontAngle','normal',...
     'Position',Fig.CancelSize, ...
     'String','Cancel', ...
     'Style','Pushbutton',...
     'Tag','Pushbutton2');
Fig.RestoreSize=[FG_Size(3)*7.2/9-60/2 10 60 22];
Fig.Restore = uicontrol('Parent',Log.Steve.Figure, ...
     'Units','pixels',...
     'Callback','SAProgram Restore',...
     'FontName','Arial',...
     'FontUnits','points',...
     'FontSize',Log.UD.Ref.FontSize,...
     'FontWeight','normal',...
     'FontAngle','normal',...
     'Position',Fig.RestoreSize, ...
     'String','Default', ...
     'Style','pushbutton',...
     'Tag','Pushbutton1');
 Temp.File={
     'File'                       '                         '
     '>Load Variables...   '       'GetFile(''Load'')       '
     '>Save Variables...   '       'GetFile(''Save'')       '};
makemenu(Log.Steve.Figure,char(Temp.File(:,1)),char(Temp.File(:,2)));

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%     GLOBAL /  LOCAL  %%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  Checkboxsize=[20 (FG_Size(4)-330) 200 20];      
  Fig.Global=	uicontrol('Parent',Log.Steve.Figure, ...
         'Units','pixels',...
         'FontName','Arial',...
         'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'Position',Checkboxsize,...
		   'Style','Checkbox',...
         'String','Global Fiducial (Preserve Activation Time)', ...
         'callback','SAProgram(''Global'')',...  
		   'Value',1,...
         'Tag','Pushbutton1'); 
  Checkboxsize=[20 (FG_Size(4)-360) 200 20];      
  Fig.Local=	uicontrol('Parent',Log.Steve.Figure, ...
         'Units','pixels',...
         'FontName','Arial',...
         'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'Position',Checkboxsize,...
		   'Style','Checkbox',...
         'String','Local Fiducial (Preserve AP Morphology', ...
         'callback','SAProgram(''Local'')',...  
		   'Value',0,...
         'Tag','Pushbutton1'); 


 Checkboxsize=[20 (FG_Size(4)-390) 125 20];      
 Fig.Baseline=	uicontrol('Parent',Log.Steve.Figure, ...
         'Units','pixels',...
         'FontName','Arial',...
         'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'Position',Checkboxsize,...
		   'Style','Checkbox',...
         'String','Baseline Correct', ...
		   'Value',1,...
         'Tag','Pushbutton1'); 

  Checkboxsize=[20 (FG_Size(4)-430) 125 20];      
  Fig.Exist=	uicontrol('Parent',Log.Steve.Figure, ...
         'Units','pixels',...
         'FontName','Arial',...
         'FontUnits','points',...
         'FontSize',Log.UD.Ref.FontSize,...
         'FontWeight','normal',...
         'FontAngle','normal',...
         'Position',Checkboxsize,...
		   'Style','Checkbox',...
         'String','Use Existing Annotations', ...
		   'Value',0,...
         'Tag','Pushbutton1'); 
Fig.AnnoteSelect = uicontrol('Parent',Log.Steve.Figure, ...
   'Units','pixels', ...
   'Callback','SAProgram(''Annote'')',...
	'BackgroundColor',[1 1 1], ...
	'ListboxTop',0, ...
	'Position',[155 FG_Size(4)-430 125 20], ...
	'String',' ', ...
	'Style','popupmenu', ...
	'Tag','PopupMenu1', ...
	'Value',1);



  if isfield(Log,'Defaults')
     if ~isfield(Log.Defaults,'Parameter1') | isempty(Log.Defaults.Parameter1) 
        set(Fig.Restore,'Value',1)
     elseif isempty(Log.Defaults.Parameter2)
        set(Fig.Restore,'Value',1)
     elseif isempty(Log.Defaults.Parameter3)
        set(Fig.Restore,'Value',1)
     elseif isempty(Log.Defaults.Parameter4)
        set(Fig.Restore,'Value',1)
     elseif ~isfield(Log.Defaults,'Par5')
        set(Fig.Restore,'Value',1)
   %  elseif isempty(Log.Defaults.Par6)
   %     set(Fig.Restore,'Value',1)
   %  elseif isempty(Log.Defaults.Par7)
   %     set(Fig.Restore,'Value',1)
     else
        set(Fig.Parameter1,'String',num2str(Log.Defaults.Parameter1));
        set(Fig.Parameter2,'String',num2str(Log.Defaults.Parameter2));
        set(Fig.Parameter3,'String',num2str(Log.Defaults.Parameter3));
        set(Fig.Parameter4,'String',num2str(Log.Defaults.Parameter4));
        set(Fig.Parameter5,'String',num2str(Log.Defaults.Par5));
        set(Fig.Parameter6,'String',num2str(Log.Defaults.Par6));
        set(Fig.Parameter7,'String',num2str(Log.Defaults.Par7));
        set(Fig.Parameter8,'String',num2str(Log.Defaults.Par8));
     end
  end
  

Fig.ChLabel=varargin{11};
Fig.X1X2=varargin{12};
Fig.Data=Data{2};

   X1X2=Fig.X1X2;
if ~isempty(Fig.Annote)
   count=1;
   types=char(Fig.Annote(:,3:5));
   [x y]=size(types);
   Fig.LabelOut(1,:)=types(1,:);
   for q=1:x
      label=types(q,:);
      if label(1,1)~=Fig.LabelOut(count,1) | label(1,2)~=Fig.LabelOut(count,2) | label(1,3)~=Fig.LabelOut(count,3);
         count=count+1;
         Fig.LabelOut(count,:)=label;
      end
   end
set(Fig.AnnoteSelect,'String',Fig.LabelOut);   
end   


if isempty(Fig.Annote)
   set(Fig.Exist,'Visible','off')
   set(Fig.AnnoteSelect,'Visible','off')
end
  
   
   
 case 'Global'
   set(Fig.Global,'Value',1);
   set(Fig.Local,'Value',0);
   set(Fig.Explanation1,'Visible','on');
   set(Fig.Parameter8,'Visible','on');
   
case 'Local'
   set(Fig.Local,'Value',1);
   set(Fig.Global,'Value',0);
   set(Fig.Explanation1,'Visible','off');
   set(Fig.Parameter8,'Visible','off');
   
case 'Restore'
    load PDefaults
            set(Fig.Parameter1,'String',5);
            set(Fig.Parameter2,'String',5);
            set(Fig.Parameter3,'String',44);
            set(Fig.Parameter4,'String',1.1);
            set(Fig.Parameter5,'String',120);
            set(Fig.Parameter6,'String',-10);
            set(Fig.Parameter7,'String',1321);
            set(Fig.Parameter8,'String',0);
            
case 'Cancel'
   close(Log.Steve.Figure)
   Fig.avgarray=[];
   
case 'Annote'
   set(Fig.Exist,'Value',1);
   

   
case 'Run'
   RETURN=1;
Label='AVG';
Comment='Signal Avereging';
Annote_Out=[];
ChLabel=Fig.ChLabel;
   X1X2=Fig.X1X2;
   NewData=Fig.Data;
   Log.Defaults.Parameter1=num2str(get(Fig.Parameter1,'String'));
   Log.Defaults.Parameter2=num2str(get(Fig.Parameter2,'String'));
   Log.Defaults.Parameter3=num2str(get(Fig.Parameter3,'String'));
   Log.Defaults.Parameter4=num2str(get(Fig.Parameter4,'String'));
   Log.Defaults.Parameter5=6;
   Log.Defaults.Parameter6=0;
   Log.Defaults.Parameter7=0;
   Log.Defaults.Parameter8=0;
   Log.Defaults.Par5=num2str(get(Fig.Parameter5,'String'));
   Log.Defaults.Par6=num2str(get(Fig.Parameter6,'String'));
   Log.Defaults.Par7=num2str(get(Fig.Parameter7,'String'));
   Log.Defaults.Par8=num2str(get(Fig.Parameter8,'String'));
   PDefaults=[str2num(Log.Defaults.Parameter1) str2num(Log.Defaults.Parameter2) str2num(Log.Defaults.Parameter3) str2num(Log.Defaults.Parameter4) str2num(Log.Defaults.Par5) str2num(Log.Defaults.Par6) str2num(Log.Defaults.Par7) str2num(Log.Defaults.Par8)];
save PDefaults PDefaults
   LorG=get(Fig.Global,'Value');
   if LorG==1
		FIDCHANNEL=str2num(get(Fig.Parameter8,'String'))+1;
   else
      FIDCHANNEL='LOCAL';
   end
   
   templabel=get(Fig.AnnoteSelect,'String');
   label=templabel(get(Fig.AnnoteSelect,'Value'),:);
   %%%%%%%%%%%%%%%%%%%%%%%%%%%%
   % TONY's AVERAGING PROGRAM %
   %%%%%%%%%%%%%%%%%%%%%%%%%%%%
TPRATIO=[];
AVGFRACTION=0.9;% How much of AVG_WINDOW to use
PD_SRATE=Log.Head.SRate;
PD_SMOOTH=str2num(get(Fig.Parameter1,'String'));
PD_SLWINDOW=str2num(get(Fig.Parameter2,'String'));
PD_LOCKOUT=str2num(get(Fig.Parameter3,'String'));
PD_THRESH=str2num(get(Fig.Parameter4,'String'));
AVG_FRACTION=str2num(get(Fig.Parameter5,'String'));% How much of AVG_WINDOW to use
AVG_OFFSET=str2num(get(Fig.Parameter6,'String'));
AVG_BASELINE=get(Fig.Baseline,'Value');
AVG_WINDOW=[];
AVG_ARRAY=[];
averagedbeats=0*ones(1,length(ChLabel(:,1)));
% $$$ str2num(get(Fig.Local,'String'))
% $$$ str2num(get(Fig.Global,'String'))
% $$$ 
% $$$ if (Fig.Local)
% $$$   FIDCHANNEL = 'LOCAL';
% $$$ elseif (Fig.Global)
% $$$   FIDCHANNEL = str2num(get(Fig.Parameter5,'String'))
% $$$ end

h=waitbar(0,'Calculating Averages');
for i=1:(length(ChLabel(:,1))-0)
   %
  % SECTION 1: User selectable options
  %

  channel = ChLabel(i,2);

  negativeAP = 1; % Set if AP data is inverted (i.e. comes from
		  % optical mapping), unset if AP data is normal
		  % (i.e. depolarization is positive).
		  
  % END OF USER SELECTABLE OPTIONS %
						  

  X1=[X1X2(1):X1X2(2)];
  X2=[X1X2(1):X1X2(2)-1];

  % Change this 1 to -1 to invert data.
  data=1*(NewData(channel,X1));
  %
  % SECTION 2: Run PeakDetection
  %

  % If we want to find annotations on each individual channel, run
  % PeakDetection at every loop and assign to fiducialX (which will
  % use these annotations further on). Otherwise check for the
  % existance of fiducialX. If it doesn't exist, run PeakDetection on
  % the preferred channel (FIDCHANNEL). If it does exist, it means we
  % have already computed the annotations, so don't do it anymore,
  % just use the existing fiducialX. This makes the code a little
  % faster.
  
   count2=1;
   fiducialX=[];
   Labelnum=1;
 if (FIDCHANNEL == 'LOCAL')
 if get(Fig.Exist,'Value')==0 
    fiducialX = [];
    datadiff=diff(data);
    fiducialX = PeakDetection(data,PD_SRATE,PD_SMOOTH,PD_SLWINDOW,PD_LOCKOUT,PD_THRESH);
    AVG_WINDOW =Tonysub('FindAvgWindow',fiducialX,AVG_FRACTION);
 else
  x=find(Fig.Annote(:,1)==i-1);
  for r=1:length(x)
      q=x(r);
      if Fig.Annote(q,2)>=Fig.X1X2(1) & Fig.Annote(q,2)<=Fig.X1X2(2)
            fiducialX(count2)=Fig.Annote(q,2)-Fig.X1X2(1)+1;
            AVG_WINDOW = Tonysub('FindAvgWindow',fiducialX,AVG_FRACTION);
            count2=count2+1;
       else
            %fiducialX=-1;
       end
    end
    RETURN=0;
  end
    
  %%%%%%%%%%%%%%%%%%  GLOBAL GLOBAL GLOBA 
  %%%%%%%%%%%%%% ANNOTATIONS ANNOTATIONS
  
elseif isempty(fiducialX)
 if get(Fig.Exist,'Value')==0; 
    fiducialX = PeakDetection(NewData(FIDCHANNEL,X1),PD_SRATE,PD_SMOOTH,PD_SLWINDOW,PD_LOCKOUT,PD_THRESH);
    AVG_WINDOW = Tonysub('FindAvgWindow',fiducialX,AVG_FRACTION);
 else
  x=find(Fig.Annote(:,1)==FIDCHANNEL-1);
    for r=1:length(x)
     q=x(r);
      if Fig.Annote(q,2)>=Fig.X1X2(1) & Fig.Annote(q,2)<=Fig.X1X2(2)
            fiducialX(count2)=Fig.Annote(q,2)-Fig.X1X2(1)+1;
            AVG_WINDOW = Tonysub('FindAvgWindow',fiducialX,AVG_FRACTION);
            count2=count2+1;
       else
            %fiducialX=-1;
       end
    end
    RETURN=0;
end
end
% Exit if PeakDetection returned an error.

if ~isempty(fiducialX)
if fiducialX == -1 
   return
end
end
  
  %if fiducialX == 0
  %  WARNING = warndlg('No fiducials detected');
  %end

  %
  % SECTION 3: Averaging
  %
  
  % Get some info on the averaged data.
  % size(AVG_WINDOW)
  
if ~isempty(AVG_WINDOW)
   [averagedata,averagedbeats(i)]=AverageData(data,fiducialX,AVG_BASELINE,AVG_WINDOW,AVG_OFFSET);
 % RETURNING ANNOTATION PARAMETERS TO ZENG  
 if (fiducialX) & isnumeric(FIDCHANNEL) & (FIDCHANNEL==i)
     for count=1:length(fiducialX);
        Annote_Out=[Annote_Out; ChLabel(FIDCHANNEL,1) X1(fiducialX(count)) Label];
     end
  elseif (fiducialX) & ~isnumeric(FIDCHANNEL)
     for count=1:length(fiducialX);
        Annote_Out=[Annote_Out;ChLabel(i,1) X1(fiducialX(count)) Label];
     end
  end
  eval(['channel' num2str(channel) '=averagedata;'])
  AVG_CHANNELLENGTH(channel)=length(eval(['channel' num2str(channel)]));
end
  waitbar(i/length(ChLabel(:,1)),h);
end

% Here is the second part: we get the maximum and store all into the
% matrix.
if ~isempty(AVG_WINDOW)
AVG_ARRAYWIDTH=median(AVG_CHANNELLENGTH);
for i=1:(length(ChLabel(:,1))-0)
   AVG_ARRAY(i,:)=Tonysub('padzeros',eval(['channel' num2str(i)]),AVG_ARRAYWIDTH);
end
end

close(h);
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  
   
   %  Fig.avgarray=Average(FIDCHANNEL,Fig.Data,Fig.ChLabel,Fig.X1X2);
   
if RETURN==1
Annote_Out=[Fig.Annote;Annote_Out];
Zeng_Analysis('Existing Check',Stripchart.Figure,'AVG','Average Fiducials',Annote_Out)
end

   
   
if ~isempty(AVG_ARRAY)  
   Fig.avgarray=AVG_ARRAY;  
   channel=1;
   [x y]=size(Fig.avgarray);
else
   y=0;
end
   close(Log.Steve.Figure)

if y>1
   PlotInterface('Plot',Fig.avgarray,averagedbeats);
   plot([0:1000/Log.Head.SRate:length(Fig.avgarray(channel,:))*1000/Log.Head.SRate-1*1000/Log.Head.SRate],Fig.avgarray(channel,:),'Parent',Fig.Axis);
   xlabel('msec')
   axes(Fig.Axis);
   axis tight   
else
   warndlg('Unable to Average Signal');
end

end

